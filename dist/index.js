(()=>{var __webpack_modules__={265:function(__unused_webpack_module,exports,__webpack_require__){"use strict";var __importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)Object.hasOwnProperty.call(mod,k)&&(result[k]=mod[k]);return result.default=mod,result};Object.defineProperty(exports,"__esModule",{value:!0});const os=__importStar(__webpack_require__(87)),utils_1=__webpack_require__(570);function issueCommand(command,properties,message){const cmd=new Command(command,properties,message);process.stdout.write(cmd.toString()+os.EOL)}exports.issueCommand=issueCommand,exports.issue=function issue(name,message=""){issueCommand(name,{},message)};class Command{constructor(command,properties,message){command||(command="missing.command"),this.command=command,this.properties=properties,this.message=message}toString(){let cmdStr="::"+this.command;if(this.properties&&Object.keys(this.properties).length>0){cmdStr+=" ";let first=!0;for(const key in this.properties)if(this.properties.hasOwnProperty(key)){const val=this.properties[key];val&&(first?first=!1:cmdStr+=",",cmdStr+=`${key}=${s=val,utils_1.toCommandValue(s).replace(/%/g,"%25").replace(/\r/g,"%0D").replace(/\n/g,"%0A").replace(/:/g,"%3A").replace(/,/g,"%2C")}`)}}var s;return cmdStr+=`::${function escapeData(s){return utils_1.toCommandValue(s).replace(/%/g,"%25").replace(/\r/g,"%0D").replace(/\n/g,"%0A")}(this.message)}`,cmdStr}}},225:function(__unused_webpack_module,exports,__webpack_require__){"use strict";var __awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):function adopt(value){return value instanceof P?value:new P((function(resolve){resolve(value)}))}(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))},__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)Object.hasOwnProperty.call(mod,k)&&(result[k]=mod[k]);return result.default=mod,result};Object.defineProperty(exports,"__esModule",{value:!0});const command_1=__webpack_require__(265),file_command_1=__webpack_require__(108),utils_1=__webpack_require__(570),os=__importStar(__webpack_require__(87)),path=__importStar(__webpack_require__(622));var ExitCode;function error(message){command_1.issue("error",message instanceof Error?message.toString():message)}function startGroup(name){command_1.issue("group",name)}function endGroup(){command_1.issue("endgroup")}!function(ExitCode){ExitCode[ExitCode.Success=0]="Success",ExitCode[ExitCode.Failure=1]="Failure"}(ExitCode=exports.ExitCode||(exports.ExitCode={})),exports.exportVariable=function exportVariable(name,val){const convertedVal=utils_1.toCommandValue(val);if(process.env[name]=convertedVal,process.env.GITHUB_ENV||""){const delimiter="_GitHubActionsFileCommandDelimeter_",commandValue=`${name}<<${delimiter}${os.EOL}${convertedVal}${os.EOL}${delimiter}`;file_command_1.issueCommand("ENV",commandValue)}else command_1.issueCommand("set-env",{name},convertedVal)},exports.setSecret=function setSecret(secret){command_1.issueCommand("add-mask",{},secret)},exports.addPath=function addPath(inputPath){process.env.GITHUB_PATH||""?file_command_1.issueCommand("PATH",inputPath):command_1.issueCommand("add-path",{},inputPath),process.env.PATH=`${inputPath}${path.delimiter}${process.env.PATH}`},exports.getInput=function getInput(name,options){const val=process.env[`INPUT_${name.replace(/ /g,"_").toUpperCase()}`]||"";if(options&&options.required&&!val)throw new Error(`Input required and not supplied: ${name}`);return val.trim()},exports.setOutput=function setOutput(name,value){process.stdout.write(os.EOL),command_1.issueCommand("set-output",{name},value)},exports.setCommandEcho=function setCommandEcho(enabled){command_1.issue("echo",enabled?"on":"off")},exports.setFailed=function setFailed(message){process.exitCode=ExitCode.Failure,error(message)},exports.isDebug=function isDebug(){return"1"===process.env.RUNNER_DEBUG},exports.debug=function debug(message){command_1.issueCommand("debug",{},message)},exports.error=error,exports.warning=function warning(message){command_1.issue("warning",message instanceof Error?message.toString():message)},exports.info=function info(message){process.stdout.write(message+os.EOL)},exports.startGroup=startGroup,exports.endGroup=endGroup,exports.group=function group(name,fn){return __awaiter(this,void 0,void 0,(function*(){let result;startGroup(name);try{result=yield fn()}finally{endGroup()}return result}))},exports.saveState=function saveState(name,value){command_1.issueCommand("save-state",{name},value)},exports.getState=function getState(name){return process.env[`STATE_${name}`]||""}},108:function(__unused_webpack_module,exports,__webpack_require__){"use strict";var __importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)Object.hasOwnProperty.call(mod,k)&&(result[k]=mod[k]);return result.default=mod,result};Object.defineProperty(exports,"__esModule",{value:!0});const fs=__importStar(__webpack_require__(747)),os=__importStar(__webpack_require__(87)),utils_1=__webpack_require__(570);exports.issueCommand=function issueCommand(command,message){const filePath=process.env[`GITHUB_${command}`];if(!filePath)throw new Error(`Unable to find environment variable for file command ${command}`);if(!fs.existsSync(filePath))throw new Error(`Missing file at path: ${filePath}`);fs.appendFileSync(filePath,`${utils_1.toCommandValue(message)}${os.EOL}`,{encoding:"utf8"})}},570:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.toCommandValue=function toCommandValue(input){return null==input?"":"string"==typeof input||input instanceof String?input:JSON.stringify(input)}},27:function(__unused_webpack_module,exports,__webpack_require__){"use strict";var __awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):function adopt(value){return value instanceof P?value:new P((function(resolve){resolve(value)}))}(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))},__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)Object.hasOwnProperty.call(mod,k)&&(result[k]=mod[k]);return result.default=mod,result};Object.defineProperty(exports,"__esModule",{value:!0});const tr=__importStar(__webpack_require__(171));exports.exec=function exec(commandLine,args,options){return __awaiter(this,void 0,void 0,(function*(){const commandArgs=tr.argStringToArray(commandLine);if(0===commandArgs.length)throw new Error("Parameter 'commandLine' cannot be null or empty.");const toolPath=commandArgs[0];args=commandArgs.slice(1).concat(args||[]);return new tr.ToolRunner(toolPath,args,options).exec()}))}},171:function(__unused_webpack_module,exports,__webpack_require__){"use strict";var __awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):function adopt(value){return value instanceof P?value:new P((function(resolve){resolve(value)}))}(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))},__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)Object.hasOwnProperty.call(mod,k)&&(result[k]=mod[k]);return result.default=mod,result};Object.defineProperty(exports,"__esModule",{value:!0});const os=__importStar(__webpack_require__(87)),events=__importStar(__webpack_require__(614)),child=__importStar(__webpack_require__(129)),path=__importStar(__webpack_require__(622)),io=__importStar(__webpack_require__(484)),ioUtil=__importStar(__webpack_require__(564)),IS_WINDOWS="win32"===process.platform;class ToolRunner extends events.EventEmitter{constructor(toolPath,args,options){if(super(),!toolPath)throw new Error("Parameter 'toolPath' cannot be null or empty.");this.toolPath=toolPath,this.args=args||[],this.options=options||{}}_debug(message){this.options.listeners&&this.options.listeners.debug&&this.options.listeners.debug(message)}_getCommandString(options,noPrefix){const toolPath=this._getSpawnFileName(),args=this._getSpawnArgs(options);let cmd=noPrefix?"":"[command]";if(IS_WINDOWS)if(this._isCmdFile()){cmd+=toolPath;for(const a of args)cmd+=` ${a}`}else if(options.windowsVerbatimArguments){cmd+=`"${toolPath}"`;for(const a of args)cmd+=` ${a}`}else{cmd+=this._windowsQuoteCmdArg(toolPath);for(const a of args)cmd+=` ${this._windowsQuoteCmdArg(a)}`}else{cmd+=toolPath;for(const a of args)cmd+=` ${a}`}return cmd}_processLineBuffer(data,strBuffer,onLine){try{let s=strBuffer+data.toString(),n=s.indexOf(os.EOL);for(;n>-1;){onLine(s.substring(0,n)),s=s.substring(n+os.EOL.length),n=s.indexOf(os.EOL)}strBuffer=s}catch(err){this._debug(`error processing line. Failed with error ${err}`)}}_getSpawnFileName(){return IS_WINDOWS&&this._isCmdFile()?process.env.COMSPEC||"cmd.exe":this.toolPath}_getSpawnArgs(options){if(IS_WINDOWS&&this._isCmdFile()){let argline=`/D /S /C "${this._windowsQuoteCmdArg(this.toolPath)}`;for(const a of this.args)argline+=" ",argline+=options.windowsVerbatimArguments?a:this._windowsQuoteCmdArg(a);return argline+='"',[argline]}return this.args}_endsWith(str,end){return str.endsWith(end)}_isCmdFile(){const upperToolPath=this.toolPath.toUpperCase();return this._endsWith(upperToolPath,".CMD")||this._endsWith(upperToolPath,".BAT")}_windowsQuoteCmdArg(arg){if(!this._isCmdFile())return this._uvQuoteCmdArg(arg);if(!arg)return'""';const cmdSpecialChars=[" ","\t","&","(",")","[","]","{","}","^","=",";","!","'","+",",","`","~","|","<",">",'"'];let needsQuotes=!1;for(const char of arg)if(cmdSpecialChars.some((x=>x===char))){needsQuotes=!0;break}if(!needsQuotes)return arg;let reverse='"',quoteHit=!0;for(let i=arg.length;i>0;i--)reverse+=arg[i-1],quoteHit&&"\\"===arg[i-1]?reverse+="\\":'"'===arg[i-1]?(quoteHit=!0,reverse+='"'):quoteHit=!1;return reverse+='"',reverse.split("").reverse().join("")}_uvQuoteCmdArg(arg){if(!arg)return'""';if(!arg.includes(" ")&&!arg.includes("\t")&&!arg.includes('"'))return arg;if(!arg.includes('"')&&!arg.includes("\\"))return`"${arg}"`;let reverse='"',quoteHit=!0;for(let i=arg.length;i>0;i--)reverse+=arg[i-1],quoteHit&&"\\"===arg[i-1]?reverse+="\\":'"'===arg[i-1]?(quoteHit=!0,reverse+="\\"):quoteHit=!1;return reverse+='"',reverse.split("").reverse().join("")}_cloneExecOptions(options){const result={cwd:(options=options||{}).cwd||process.cwd(),env:options.env||process.env,silent:options.silent||!1,windowsVerbatimArguments:options.windowsVerbatimArguments||!1,failOnStdErr:options.failOnStdErr||!1,ignoreReturnCode:options.ignoreReturnCode||!1,delay:options.delay||1e4};return result.outStream=options.outStream||process.stdout,result.errStream=options.errStream||process.stderr,result}_getSpawnOptions(options,toolPath){options=options||{};const result={};return result.cwd=options.cwd,result.env=options.env,result.windowsVerbatimArguments=options.windowsVerbatimArguments||this._isCmdFile(),options.windowsVerbatimArguments&&(result.argv0=`"${toolPath}"`),result}exec(){return __awaiter(this,void 0,void 0,(function*(){return!ioUtil.isRooted(this.toolPath)&&(this.toolPath.includes("/")||IS_WINDOWS&&this.toolPath.includes("\\"))&&(this.toolPath=path.resolve(process.cwd(),this.options.cwd||process.cwd(),this.toolPath)),this.toolPath=yield io.which(this.toolPath,!0),new Promise(((resolve,reject)=>{this._debug(`exec tool: ${this.toolPath}`),this._debug("arguments:");for(const arg of this.args)this._debug(`   ${arg}`);const optionsNonNull=this._cloneExecOptions(this.options);!optionsNonNull.silent&&optionsNonNull.outStream&&optionsNonNull.outStream.write(this._getCommandString(optionsNonNull)+os.EOL);const state=new ExecState(optionsNonNull,this.toolPath);state.on("debug",(message=>{this._debug(message)}));const fileName=this._getSpawnFileName(),cp=child.spawn(fileName,this._getSpawnArgs(optionsNonNull),this._getSpawnOptions(this.options,fileName));cp.stdout&&cp.stdout.on("data",(data=>{this.options.listeners&&this.options.listeners.stdout&&this.options.listeners.stdout(data),!optionsNonNull.silent&&optionsNonNull.outStream&&optionsNonNull.outStream.write(data),this._processLineBuffer(data,"",(line=>{this.options.listeners&&this.options.listeners.stdline&&this.options.listeners.stdline(line)}))}));if(cp.stderr&&cp.stderr.on("data",(data=>{if(state.processStderr=!0,this.options.listeners&&this.options.listeners.stderr&&this.options.listeners.stderr(data),!optionsNonNull.silent&&optionsNonNull.errStream&&optionsNonNull.outStream){(optionsNonNull.failOnStdErr?optionsNonNull.errStream:optionsNonNull.outStream).write(data)}this._processLineBuffer(data,"",(line=>{this.options.listeners&&this.options.listeners.errline&&this.options.listeners.errline(line)}))})),cp.on("error",(err=>{state.processError=err.message,state.processExited=!0,state.processClosed=!0,state.CheckComplete()})),cp.on("exit",(code=>{state.processExitCode=code,state.processExited=!0,this._debug(`Exit code ${code} received from tool '${this.toolPath}'`),state.CheckComplete()})),cp.on("close",(code=>{state.processExitCode=code,state.processExited=!0,state.processClosed=!0,this._debug(`STDIO streams have closed for tool '${this.toolPath}'`),state.CheckComplete()})),state.on("done",((error,exitCode)=>{"".length>0&&this.emit("stdline",""),"".length>0&&this.emit("errline",""),cp.removeAllListeners(),error?reject(error):resolve(exitCode)})),this.options.input){if(!cp.stdin)throw new Error("child process missing stdin");cp.stdin.end(this.options.input)}}))}))}}exports.ToolRunner=ToolRunner,exports.argStringToArray=function argStringToArray(argString){const args=[];let inQuotes=!1,escaped=!1,arg="";function append(c){escaped&&'"'!==c&&(arg+="\\"),arg+=c,escaped=!1}for(let i=0;i<argString.length;i++){const c=argString.charAt(i);'"'!==c?"\\"===c&&escaped?append(c):"\\"===c&&inQuotes?escaped=!0:" "!==c||inQuotes?append(c):arg.length>0&&(args.push(arg),arg=""):escaped?append(c):inQuotes=!inQuotes}return arg.length>0&&args.push(arg.trim()),args};class ExecState extends events.EventEmitter{constructor(options,toolPath){if(super(),this.processClosed=!1,this.processError="",this.processExitCode=0,this.processExited=!1,this.processStderr=!1,this.delay=1e4,this.done=!1,this.timeout=null,!toolPath)throw new Error("toolPath must not be empty");this.options=options,this.toolPath=toolPath,options.delay&&(this.delay=options.delay)}CheckComplete(){this.done||(this.processClosed?this._setResult():this.processExited&&(this.timeout=setTimeout(ExecState.HandleTimeout,this.delay,this)))}_debug(message){this.emit("debug",message)}_setResult(){let error;this.processExited&&(this.processError?error=new Error(`There was an error when attempting to execute the process '${this.toolPath}'. This may indicate the process failed to start. Error: ${this.processError}`):0===this.processExitCode||this.options.ignoreReturnCode?this.processStderr&&this.options.failOnStdErr&&(error=new Error(`The process '${this.toolPath}' failed because one or more lines were written to the STDERR stream`)):error=new Error(`The process '${this.toolPath}' failed with exit code ${this.processExitCode}`)),this.timeout&&(clearTimeout(this.timeout),this.timeout=null),this.done=!0,this.emit("done",error,this.processExitCode)}static HandleTimeout(state){if(!state.done){if(!state.processClosed&&state.processExited){const message=`The STDIO streams did not close within ${state.delay/1e3} seconds of the exit event from process '${state.toolPath}'. This may indicate a child process inherited the STDIO streams and has not yet exited.`;state._debug(message)}state._setResult()}}}},37:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Context=void 0;const fs_1=__webpack_require__(747),os_1=__webpack_require__(87);exports.Context=class Context{constructor(){if(this.payload={},process.env.GITHUB_EVENT_PATH)if(fs_1.existsSync(process.env.GITHUB_EVENT_PATH))this.payload=JSON.parse(fs_1.readFileSync(process.env.GITHUB_EVENT_PATH,{encoding:"utf8"}));else{const path=process.env.GITHUB_EVENT_PATH;process.stdout.write(`GITHUB_EVENT_PATH ${path} does not exist${os_1.EOL}`)}this.eventName=process.env.GITHUB_EVENT_NAME,this.sha=process.env.GITHUB_SHA,this.ref=process.env.GITHUB_REF,this.workflow=process.env.GITHUB_WORKFLOW,this.action=process.env.GITHUB_ACTION,this.actor=process.env.GITHUB_ACTOR,this.job=process.env.GITHUB_JOB,this.runNumber=parseInt(process.env.GITHUB_RUN_NUMBER,10),this.runId=parseInt(process.env.GITHUB_RUN_ID,10)}get issue(){const payload=this.payload;return Object.assign(Object.assign({},this.repo),{number:(payload.issue||payload.pull_request||payload).number})}get repo(){if(process.env.GITHUB_REPOSITORY){const[owner,repo]=process.env.GITHUB_REPOSITORY.split("/");return{owner,repo}}if(this.payload.repository)return{owner:this.payload.repository.owner.login,repo:this.payload.repository.name};throw new Error("context.repo requires a GITHUB_REPOSITORY environment variable like 'owner/repo'")}}},142:function(__unused_webpack_module,exports,__webpack_require__){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)Object.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result};Object.defineProperty(exports,"__esModule",{value:!0}),exports.getOctokit=exports.context=void 0;const Context=__importStar(__webpack_require__(37)),utils_1=__webpack_require__(833);exports.context=new Context.Context,exports.getOctokit=function getOctokit(token,options){return new utils_1.GitHub(utils_1.getOctokitOptions(token,options))}},460:function(__unused_webpack_module,exports,__webpack_require__){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)Object.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result};Object.defineProperty(exports,"__esModule",{value:!0}),exports.getApiBaseUrl=exports.getProxyAgent=exports.getAuthString=void 0;const httpClient=__importStar(__webpack_require__(300));exports.getAuthString=function getAuthString(token,options){if(!token&&!options.auth)throw new Error("Parameter token or opts.auth is required");if(token&&options.auth)throw new Error("Parameters token and opts.auth may not both be specified");return"string"==typeof options.auth?options.auth:`token ${token}`},exports.getProxyAgent=function getProxyAgent(destinationUrl){return(new httpClient.HttpClient).getAgent(destinationUrl)},exports.getApiBaseUrl=function getApiBaseUrl(){return process.env.GITHUB_API_URL||"https://api.github.com"}},833:function(__unused_webpack_module,exports,__webpack_require__){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)Object.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result};Object.defineProperty(exports,"__esModule",{value:!0}),exports.getOctokitOptions=exports.GitHub=exports.context=void 0;const Context=__importStar(__webpack_require__(37)),Utils=__importStar(__webpack_require__(460)),core_1=__webpack_require__(143),plugin_rest_endpoint_methods_1=__webpack_require__(401),plugin_paginate_rest_1=__webpack_require__(745);exports.context=new Context.Context;const baseUrl=Utils.getApiBaseUrl(),defaults={baseUrl,request:{agent:Utils.getProxyAgent(baseUrl)}};exports.GitHub=core_1.Octokit.plugin(plugin_rest_endpoint_methods_1.restEndpointMethods,plugin_paginate_rest_1.paginateRest).defaults(defaults),exports.getOctokitOptions=function getOctokitOptions(token,options){const opts=Object.assign({},options||{}),auth=Utils.getAuthString(token,opts);return auth&&(opts.auth=auth),opts}},300:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const http=__webpack_require__(605),https=__webpack_require__(211),pm=__webpack_require__(686);let tunnel;var HttpCodes,Headers,MediaTypes;!function(HttpCodes){HttpCodes[HttpCodes.OK=200]="OK",HttpCodes[HttpCodes.MultipleChoices=300]="MultipleChoices",HttpCodes[HttpCodes.MovedPermanently=301]="MovedPermanently",HttpCodes[HttpCodes.ResourceMoved=302]="ResourceMoved",HttpCodes[HttpCodes.SeeOther=303]="SeeOther",HttpCodes[HttpCodes.NotModified=304]="NotModified",HttpCodes[HttpCodes.UseProxy=305]="UseProxy",HttpCodes[HttpCodes.SwitchProxy=306]="SwitchProxy",HttpCodes[HttpCodes.TemporaryRedirect=307]="TemporaryRedirect",HttpCodes[HttpCodes.PermanentRedirect=308]="PermanentRedirect",HttpCodes[HttpCodes.BadRequest=400]="BadRequest",HttpCodes[HttpCodes.Unauthorized=401]="Unauthorized",HttpCodes[HttpCodes.PaymentRequired=402]="PaymentRequired",HttpCodes[HttpCodes.Forbidden=403]="Forbidden",HttpCodes[HttpCodes.NotFound=404]="NotFound",HttpCodes[HttpCodes.MethodNotAllowed=405]="MethodNotAllowed",HttpCodes[HttpCodes.NotAcceptable=406]="NotAcceptable",HttpCodes[HttpCodes.ProxyAuthenticationRequired=407]="ProxyAuthenticationRequired",HttpCodes[HttpCodes.RequestTimeout=408]="RequestTimeout",HttpCodes[HttpCodes.Conflict=409]="Conflict",HttpCodes[HttpCodes.Gone=410]="Gone",HttpCodes[HttpCodes.TooManyRequests=429]="TooManyRequests",HttpCodes[HttpCodes.InternalServerError=500]="InternalServerError",HttpCodes[HttpCodes.NotImplemented=501]="NotImplemented",HttpCodes[HttpCodes.BadGateway=502]="BadGateway",HttpCodes[HttpCodes.ServiceUnavailable=503]="ServiceUnavailable",HttpCodes[HttpCodes.GatewayTimeout=504]="GatewayTimeout"}(HttpCodes=exports.HttpCodes||(exports.HttpCodes={})),function(Headers){Headers.Accept="accept",Headers.ContentType="content-type"}(Headers=exports.Headers||(exports.Headers={})),function(MediaTypes){MediaTypes.ApplicationJson="application/json"}(MediaTypes=exports.MediaTypes||(exports.MediaTypes={})),exports.getProxyUrl=function getProxyUrl(serverUrl){let proxyUrl=pm.getProxyUrl(new URL(serverUrl));return proxyUrl?proxyUrl.href:""};const HttpRedirectCodes=[HttpCodes.MovedPermanently,HttpCodes.ResourceMoved,HttpCodes.SeeOther,HttpCodes.TemporaryRedirect,HttpCodes.PermanentRedirect],HttpResponseRetryCodes=[HttpCodes.BadGateway,HttpCodes.ServiceUnavailable,HttpCodes.GatewayTimeout],RetryableHttpVerbs=["OPTIONS","GET","DELETE","HEAD"];class HttpClientError extends Error{constructor(message,statusCode){super(message),this.name="HttpClientError",this.statusCode=statusCode,Object.setPrototypeOf(this,HttpClientError.prototype)}}exports.HttpClientError=HttpClientError;class HttpClientResponse{constructor(message){this.message=message}readBody(){return new Promise((async(resolve,reject)=>{let output=Buffer.alloc(0);this.message.on("data",(chunk=>{output=Buffer.concat([output,chunk])})),this.message.on("end",(()=>{resolve(output.toString())}))}))}}exports.HttpClientResponse=HttpClientResponse,exports.isHttps=function isHttps(requestUrl){return"https:"===new URL(requestUrl).protocol};class HttpClient{constructor(userAgent,handlers,requestOptions){this._ignoreSslError=!1,this._allowRedirects=!0,this._allowRedirectDowngrade=!1,this._maxRedirects=50,this._allowRetries=!1,this._maxRetries=1,this._keepAlive=!1,this._disposed=!1,this.userAgent=userAgent,this.handlers=handlers||[],this.requestOptions=requestOptions,requestOptions&&(null!=requestOptions.ignoreSslError&&(this._ignoreSslError=requestOptions.ignoreSslError),this._socketTimeout=requestOptions.socketTimeout,null!=requestOptions.allowRedirects&&(this._allowRedirects=requestOptions.allowRedirects),null!=requestOptions.allowRedirectDowngrade&&(this._allowRedirectDowngrade=requestOptions.allowRedirectDowngrade),null!=requestOptions.maxRedirects&&(this._maxRedirects=Math.max(requestOptions.maxRedirects,0)),null!=requestOptions.keepAlive&&(this._keepAlive=requestOptions.keepAlive),null!=requestOptions.allowRetries&&(this._allowRetries=requestOptions.allowRetries),null!=requestOptions.maxRetries&&(this._maxRetries=requestOptions.maxRetries))}options(requestUrl,additionalHeaders){return this.request("OPTIONS",requestUrl,null,additionalHeaders||{})}get(requestUrl,additionalHeaders){return this.request("GET",requestUrl,null,additionalHeaders||{})}del(requestUrl,additionalHeaders){return this.request("DELETE",requestUrl,null,additionalHeaders||{})}post(requestUrl,data,additionalHeaders){return this.request("POST",requestUrl,data,additionalHeaders||{})}patch(requestUrl,data,additionalHeaders){return this.request("PATCH",requestUrl,data,additionalHeaders||{})}put(requestUrl,data,additionalHeaders){return this.request("PUT",requestUrl,data,additionalHeaders||{})}head(requestUrl,additionalHeaders){return this.request("HEAD",requestUrl,null,additionalHeaders||{})}sendStream(verb,requestUrl,stream,additionalHeaders){return this.request(verb,requestUrl,stream,additionalHeaders)}async getJson(requestUrl,additionalHeaders={}){additionalHeaders[Headers.Accept]=this._getExistingOrDefaultHeader(additionalHeaders,Headers.Accept,MediaTypes.ApplicationJson);let res=await this.get(requestUrl,additionalHeaders);return this._processResponse(res,this.requestOptions)}async postJson(requestUrl,obj,additionalHeaders={}){let data=JSON.stringify(obj,null,2);additionalHeaders[Headers.Accept]=this._getExistingOrDefaultHeader(additionalHeaders,Headers.Accept,MediaTypes.ApplicationJson),additionalHeaders[Headers.ContentType]=this._getExistingOrDefaultHeader(additionalHeaders,Headers.ContentType,MediaTypes.ApplicationJson);let res=await this.post(requestUrl,data,additionalHeaders);return this._processResponse(res,this.requestOptions)}async putJson(requestUrl,obj,additionalHeaders={}){let data=JSON.stringify(obj,null,2);additionalHeaders[Headers.Accept]=this._getExistingOrDefaultHeader(additionalHeaders,Headers.Accept,MediaTypes.ApplicationJson),additionalHeaders[Headers.ContentType]=this._getExistingOrDefaultHeader(additionalHeaders,Headers.ContentType,MediaTypes.ApplicationJson);let res=await this.put(requestUrl,data,additionalHeaders);return this._processResponse(res,this.requestOptions)}async patchJson(requestUrl,obj,additionalHeaders={}){let data=JSON.stringify(obj,null,2);additionalHeaders[Headers.Accept]=this._getExistingOrDefaultHeader(additionalHeaders,Headers.Accept,MediaTypes.ApplicationJson),additionalHeaders[Headers.ContentType]=this._getExistingOrDefaultHeader(additionalHeaders,Headers.ContentType,MediaTypes.ApplicationJson);let res=await this.patch(requestUrl,data,additionalHeaders);return this._processResponse(res,this.requestOptions)}async request(verb,requestUrl,data,headers){if(this._disposed)throw new Error("Client has already been disposed.");let response,parsedUrl=new URL(requestUrl),info=this._prepareRequest(verb,parsedUrl,headers),maxTries=this._allowRetries&&-1!=RetryableHttpVerbs.indexOf(verb)?this._maxRetries+1:1,numTries=0;for(;numTries<maxTries;){if(response=await this.requestRaw(info,data),response&&response.message&&response.message.statusCode===HttpCodes.Unauthorized){let authenticationHandler;for(let i=0;i<this.handlers.length;i++)if(this.handlers[i].canHandleAuthentication(response)){authenticationHandler=this.handlers[i];break}return authenticationHandler?authenticationHandler.handleAuthentication(this,info,data):response}let redirectsRemaining=this._maxRedirects;for(;-1!=HttpRedirectCodes.indexOf(response.message.statusCode)&&this._allowRedirects&&redirectsRemaining>0;){const redirectUrl=response.message.headers.location;if(!redirectUrl)break;let parsedRedirectUrl=new URL(redirectUrl);if("https:"==parsedUrl.protocol&&parsedUrl.protocol!=parsedRedirectUrl.protocol&&!this._allowRedirectDowngrade)throw new Error("Redirect from HTTPS to HTTP protocol. This downgrade is not allowed for security reasons. If you want to allow this behavior, set the allowRedirectDowngrade option to true.");if(await response.readBody(),parsedRedirectUrl.hostname!==parsedUrl.hostname)for(let header in headers)"authorization"===header.toLowerCase()&&delete headers[header];info=this._prepareRequest(verb,parsedRedirectUrl,headers),response=await this.requestRaw(info,data),redirectsRemaining--}if(-1==HttpResponseRetryCodes.indexOf(response.message.statusCode))return response;numTries+=1,numTries<maxTries&&(await response.readBody(),await this._performExponentialBackoff(numTries))}return response}dispose(){this._agent&&this._agent.destroy(),this._disposed=!0}requestRaw(info,data){return new Promise(((resolve,reject)=>{this.requestRawWithCallback(info,data,(function(err,res){err&&reject(err),resolve(res)}))}))}requestRawWithCallback(info,data,onResult){let socket;"string"==typeof data&&(info.options.headers["Content-Length"]=Buffer.byteLength(data,"utf8"));let callbackCalled=!1,handleResult=(err,res)=>{callbackCalled||(callbackCalled=!0,onResult(err,res))},req=info.httpModule.request(info.options,(msg=>{let res=new HttpClientResponse(msg);handleResult(null,res)}));req.on("socket",(sock=>{socket=sock})),req.setTimeout(this._socketTimeout||18e4,(()=>{socket&&socket.end(),handleResult(new Error("Request timeout: "+info.options.path),null)})),req.on("error",(function(err){handleResult(err,null)})),data&&"string"==typeof data&&req.write(data,"utf8"),data&&"string"!=typeof data?(data.on("close",(function(){req.end()})),data.pipe(req)):req.end()}getAgent(serverUrl){let parsedUrl=new URL(serverUrl);return this._getAgent(parsedUrl)}_prepareRequest(method,requestUrl,headers){const info={};info.parsedUrl=requestUrl;const usingSsl="https:"===info.parsedUrl.protocol;info.httpModule=usingSsl?https:http;const defaultPort=usingSsl?443:80;return info.options={},info.options.host=info.parsedUrl.hostname,info.options.port=info.parsedUrl.port?parseInt(info.parsedUrl.port):defaultPort,info.options.path=(info.parsedUrl.pathname||"")+(info.parsedUrl.search||""),info.options.method=method,info.options.headers=this._mergeHeaders(headers),null!=this.userAgent&&(info.options.headers["user-agent"]=this.userAgent),info.options.agent=this._getAgent(info.parsedUrl),this.handlers&&this.handlers.forEach((handler=>{handler.prepareRequest(info.options)})),info}_mergeHeaders(headers){const lowercaseKeys=obj=>Object.keys(obj).reduce(((c,k)=>(c[k.toLowerCase()]=obj[k],c)),{});return this.requestOptions&&this.requestOptions.headers?Object.assign({},lowercaseKeys(this.requestOptions.headers),lowercaseKeys(headers)):lowercaseKeys(headers||{})}_getExistingOrDefaultHeader(additionalHeaders,header,_default){let clientHeader;var obj;return this.requestOptions&&this.requestOptions.headers&&(clientHeader=(obj=this.requestOptions.headers,Object.keys(obj).reduce(((c,k)=>(c[k.toLowerCase()]=obj[k],c)),{}))[header]),additionalHeaders[header]||clientHeader||_default}_getAgent(parsedUrl){let agent,proxyUrl=pm.getProxyUrl(parsedUrl),useProxy=proxyUrl&&proxyUrl.hostname;if(this._keepAlive&&useProxy&&(agent=this._proxyAgent),this._keepAlive&&!useProxy&&(agent=this._agent),agent)return agent;const usingSsl="https:"===parsedUrl.protocol;let maxSockets=100;if(this.requestOptions&&(maxSockets=this.requestOptions.maxSockets||http.globalAgent.maxSockets),useProxy){tunnel||(tunnel=__webpack_require__(149));const agentOptions={maxSockets,keepAlive:this._keepAlive,proxy:{proxyAuth:`${proxyUrl.username}:${proxyUrl.password}`,host:proxyUrl.hostname,port:proxyUrl.port}};let tunnelAgent;const overHttps="https:"===proxyUrl.protocol;tunnelAgent=usingSsl?overHttps?tunnel.httpsOverHttps:tunnel.httpsOverHttp:overHttps?tunnel.httpOverHttps:tunnel.httpOverHttp,agent=tunnelAgent(agentOptions),this._proxyAgent=agent}if(this._keepAlive&&!agent){const options={keepAlive:this._keepAlive,maxSockets};agent=usingSsl?new https.Agent(options):new http.Agent(options),this._agent=agent}return agent||(agent=usingSsl?https.globalAgent:http.globalAgent),usingSsl&&this._ignoreSslError&&(agent.options=Object.assign(agent.options||{},{rejectUnauthorized:!1})),agent}_performExponentialBackoff(retryNumber){retryNumber=Math.min(10,retryNumber);const ms=5*Math.pow(2,retryNumber);return new Promise((resolve=>setTimeout((()=>resolve()),ms)))}static dateTimeDeserializer(key,value){if("string"==typeof value){let a=new Date(value);if(!isNaN(a.valueOf()))return a}return value}async _processResponse(res,options){return new Promise((async(resolve,reject)=>{const statusCode=res.message.statusCode,response={statusCode,result:null,headers:{}};let obj,contents;statusCode==HttpCodes.NotFound&&resolve(response);try{contents=await res.readBody(),contents&&contents.length>0&&(obj=options&&options.deserializeDates?JSON.parse(contents,HttpClient.dateTimeDeserializer):JSON.parse(contents),response.result=obj),response.headers=res.message.headers}catch(err){}if(statusCode>299){let msg;msg=obj&&obj.message?obj.message:contents&&contents.length>0?contents:"Failed request: ("+statusCode+")";let err=new HttpClientError(msg,statusCode);err.result=response.result,reject(err)}else resolve(response)}))}}exports.HttpClient=HttpClient},686:(__unused_webpack_module,exports)=>{"use strict";function checkBypass(reqUrl){if(!reqUrl.hostname)return!1;let reqPort,noProxy=process.env.no_proxy||process.env.NO_PROXY||"";if(!noProxy)return!1;reqUrl.port?reqPort=Number(reqUrl.port):"http:"===reqUrl.protocol?reqPort=80:"https:"===reqUrl.protocol&&(reqPort=443);let upperReqHosts=[reqUrl.hostname.toUpperCase()];"number"==typeof reqPort&&upperReqHosts.push(`${upperReqHosts[0]}:${reqPort}`);for(let upperNoProxyItem of noProxy.split(",").map((x=>x.trim().toUpperCase())).filter((x=>x)))if(upperReqHosts.some((x=>x===upperNoProxyItem)))return!0;return!1}Object.defineProperty(exports,"__esModule",{value:!0}),exports.getProxyUrl=function getProxyUrl(reqUrl){let proxyUrl,proxyVar,usingSsl="https:"===reqUrl.protocol;return checkBypass(reqUrl)||(proxyVar=usingSsl?process.env.https_proxy||process.env.HTTPS_PROXY:process.env.http_proxy||process.env.HTTP_PROXY,proxyVar&&(proxyUrl=new URL(proxyVar))),proxyUrl},exports.checkBypass=checkBypass},564:function(__unused_webpack_module,exports,__webpack_require__){"use strict";var _a,__awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):function adopt(value){return value instanceof P?value:new P((function(resolve){resolve(value)}))}(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))},__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)Object.hasOwnProperty.call(mod,k)&&(result[k]=mod[k]);return result.default=mod,result};Object.defineProperty(exports,"__esModule",{value:!0});const assert_1=__webpack_require__(357),fs=__importStar(__webpack_require__(747)),path=__importStar(__webpack_require__(622));function isUnixExecutable(stats){return(1&stats.mode)>0||(8&stats.mode)>0&&stats.gid===process.getgid()||(64&stats.mode)>0&&stats.uid===process.getuid()}_a=fs.promises,exports.chmod=_a.chmod,exports.copyFile=_a.copyFile,exports.lstat=_a.lstat,exports.mkdir=_a.mkdir,exports.readdir=_a.readdir,exports.readlink=_a.readlink,exports.rename=_a.rename,exports.rmdir=_a.rmdir,exports.stat=_a.stat,exports.symlink=_a.symlink,exports.unlink=_a.unlink,exports.IS_WINDOWS="win32"===process.platform,exports.exists=function exists(fsPath){return __awaiter(this,void 0,void 0,(function*(){try{yield exports.stat(fsPath)}catch(err){if("ENOENT"===err.code)return!1;throw err}return!0}))},exports.isDirectory=function isDirectory(fsPath,useStat=!1){return __awaiter(this,void 0,void 0,(function*(){return(useStat?yield exports.stat(fsPath):yield exports.lstat(fsPath)).isDirectory()}))},exports.isRooted=function isRooted(p){if(!(p=function normalizeSeparators(p){if(p=p||"",exports.IS_WINDOWS)return(p=p.replace(/\//g,"\\")).replace(/\\\\+/g,"\\");return p.replace(/\/\/+/g,"/")}(p)))throw new Error('isRooted() parameter "p" cannot be empty');return exports.IS_WINDOWS?p.startsWith("\\")||/^[A-Z]:/i.test(p):p.startsWith("/")},exports.mkdirP=function mkdirP(fsPath,maxDepth=1e3,depth=1){return __awaiter(this,void 0,void 0,(function*(){if(assert_1.ok(fsPath,"a path argument must be provided"),fsPath=path.resolve(fsPath),depth>=maxDepth)return exports.mkdir(fsPath);try{return void(yield exports.mkdir(fsPath))}catch(err){switch(err.code){case"ENOENT":return yield mkdirP(path.dirname(fsPath),maxDepth,depth+1),void(yield exports.mkdir(fsPath));default:{let stats;try{stats=yield exports.stat(fsPath)}catch(err2){throw err}if(!stats.isDirectory())throw err}}}}))},exports.tryGetExecutablePath=function tryGetExecutablePath(filePath,extensions){return __awaiter(this,void 0,void 0,(function*(){let stats;try{stats=yield exports.stat(filePath)}catch(err){"ENOENT"!==err.code&&console.log(`Unexpected error attempting to determine if executable file exists '${filePath}': ${err}`)}if(stats&&stats.isFile())if(exports.IS_WINDOWS){const upperExt=path.extname(filePath).toUpperCase();if(extensions.some((validExt=>validExt.toUpperCase()===upperExt)))return filePath}else if(isUnixExecutable(stats))return filePath;const originalFilePath=filePath;for(const extension of extensions){filePath=originalFilePath+extension,stats=void 0;try{stats=yield exports.stat(filePath)}catch(err){"ENOENT"!==err.code&&console.log(`Unexpected error attempting to determine if executable file exists '${filePath}': ${err}`)}if(stats&&stats.isFile()){if(exports.IS_WINDOWS){try{const directory=path.dirname(filePath),upperName=path.basename(filePath).toUpperCase();for(const actualName of yield exports.readdir(directory))if(upperName===actualName.toUpperCase()){filePath=path.join(directory,actualName);break}}catch(err){console.log(`Unexpected error attempting to determine the actual case of the file '${filePath}': ${err}`)}return filePath}if(isUnixExecutable(stats))return filePath}}return""}))}},484:function(__unused_webpack_module,exports,__webpack_require__){"use strict";var __awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):function adopt(value){return value instanceof P?value:new P((function(resolve){resolve(value)}))}(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))},__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)Object.hasOwnProperty.call(mod,k)&&(result[k]=mod[k]);return result.default=mod,result};Object.defineProperty(exports,"__esModule",{value:!0});const childProcess=__importStar(__webpack_require__(129)),path=__importStar(__webpack_require__(622)),util_1=__webpack_require__(669),ioUtil=__importStar(__webpack_require__(564)),exec=util_1.promisify(childProcess.exec);function rmRF(inputPath){return __awaiter(this,void 0,void 0,(function*(){if(ioUtil.IS_WINDOWS){try{(yield ioUtil.isDirectory(inputPath,!0))?yield exec(`rd /s /q "${inputPath}"`):yield exec(`del /f /a "${inputPath}"`)}catch(err){if("ENOENT"!==err.code)throw err}try{yield ioUtil.unlink(inputPath)}catch(err){if("ENOENT"!==err.code)throw err}}else{let isDir=!1;try{isDir=yield ioUtil.isDirectory(inputPath)}catch(err){if("ENOENT"!==err.code)throw err;return}isDir?yield exec(`rm -rf "${inputPath}"`):yield ioUtil.unlink(inputPath)}}))}function mkdirP(fsPath){return __awaiter(this,void 0,void 0,(function*(){yield ioUtil.mkdirP(fsPath)}))}function findInPath(tool){return __awaiter(this,void 0,void 0,(function*(){if(!tool)throw new Error("parameter 'tool' is required");const extensions=[];if(ioUtil.IS_WINDOWS&&process.env.PATHEXT)for(const extension of process.env.PATHEXT.split(path.delimiter))extension&&extensions.push(extension);if(ioUtil.isRooted(tool)){const filePath=yield ioUtil.tryGetExecutablePath(tool,extensions);return filePath?[filePath]:[]}if(tool.includes(path.sep))return[];const directories=[];if(process.env.PATH)for(const p of process.env.PATH.split(path.delimiter))p&&directories.push(p);const matches=[];for(const directory of directories){const filePath=yield ioUtil.tryGetExecutablePath(path.join(directory,tool),extensions);filePath&&matches.push(filePath)}return matches}))}function cpDirRecursive(sourceDir,destDir,currentDepth,force){return __awaiter(this,void 0,void 0,(function*(){if(currentDepth>=255)return;currentDepth++,yield mkdirP(destDir);const files=yield ioUtil.readdir(sourceDir);for(const fileName of files){const srcFile=`${sourceDir}/${fileName}`,destFile=`${destDir}/${fileName}`;(yield ioUtil.lstat(srcFile)).isDirectory()?yield cpDirRecursive(srcFile,destFile,currentDepth,force):yield copyFile(srcFile,destFile,force)}yield ioUtil.chmod(destDir,(yield ioUtil.stat(sourceDir)).mode)}))}function copyFile(srcFile,destFile,force){return __awaiter(this,void 0,void 0,(function*(){if((yield ioUtil.lstat(srcFile)).isSymbolicLink()){try{yield ioUtil.lstat(destFile),yield ioUtil.unlink(destFile)}catch(e){"EPERM"===e.code&&(yield ioUtil.chmod(destFile,"0666"),yield ioUtil.unlink(destFile))}const symlinkFull=yield ioUtil.readlink(srcFile);yield ioUtil.symlink(symlinkFull,destFile,ioUtil.IS_WINDOWS?"junction":null)}else(yield ioUtil.exists(destFile))&&!force||(yield ioUtil.copyFile(srcFile,destFile))}))}exports.cp=function cp(source,dest,options={}){return __awaiter(this,void 0,void 0,(function*(){const{force,recursive}=function readCopyOptions(options){const force=null==options.force||options.force,recursive=Boolean(options.recursive);return{force,recursive}}(options),destStat=(yield ioUtil.exists(dest))?yield ioUtil.stat(dest):null;if(destStat&&destStat.isFile()&&!force)return;const newDest=destStat&&destStat.isDirectory()?path.join(dest,path.basename(source)):dest;if(!(yield ioUtil.exists(source)))throw new Error(`no such file or directory: ${source}`);if((yield ioUtil.stat(source)).isDirectory()){if(!recursive)throw new Error(`Failed to copy. ${source} is a directory, but tried to copy without recursive flag.`);yield cpDirRecursive(source,newDest,0,force)}else{if(""===path.relative(source,newDest))throw new Error(`'${newDest}' and '${source}' are the same file`);yield copyFile(source,newDest,force)}}))},exports.mv=function mv(source,dest,options={}){return __awaiter(this,void 0,void 0,(function*(){if(yield ioUtil.exists(dest)){let destExists=!0;if((yield ioUtil.isDirectory(dest))&&(dest=path.join(dest,path.basename(source)),destExists=yield ioUtil.exists(dest)),destExists){if(null!=options.force&&!options.force)throw new Error("Destination already exists");yield rmRF(dest)}}yield mkdirP(path.dirname(dest)),yield ioUtil.rename(source,dest)}))},exports.rmRF=rmRF,exports.mkdirP=mkdirP,exports.which=function which(tool,check){return __awaiter(this,void 0,void 0,(function*(){if(!tool)throw new Error("parameter 'tool' is required");if(check){const result=yield which(tool,!1);if(!result)throw ioUtil.IS_WINDOWS?new Error(`Unable to locate executable file: ${tool}. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also verify the file has a valid extension for an executable file.`):new Error(`Unable to locate executable file: ${tool}. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.`);return result}const matches=yield findInPath(tool);return matches&&matches.length>0?matches[0]:""}))},exports.findInPath=findInPath},143:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";function getUserAgent(){return"object"==typeof navigator&&"userAgent"in navigator?navigator.userAgent:"object"==typeof process&&"version"in process?`Node.js/${process.version.substr(1)} (${process.platform}; ${process.arch})`:"<environment undetectable>"}__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Octokit:()=>Octokit});var before_after_hook=__webpack_require__(566);
/*!
 * is-plain-object <https://github.com/jonschlinkert/is-plain-object>
 *
 * Copyright (c) 2014-2017, Jon Schlinkert.
 * Released under the MIT License.
 */
function isObject(o){return"[object Object]"===Object.prototype.toString.call(o)}function isPlainObject(o){var ctor,prot;return!1!==isObject(o)&&(void 0===(ctor=o.constructor)||!1!==isObject(prot=ctor.prototype)&&!1!==prot.hasOwnProperty("isPrototypeOf"))}function mergeDeep(defaults,options){const result=Object.assign({},defaults);return Object.keys(options).forEach((key=>{isPlainObject(options[key])?key in defaults?result[key]=mergeDeep(defaults[key],options[key]):Object.assign(result,{[key]:options[key]}):Object.assign(result,{[key]:options[key]})})),result}function removeUndefinedProperties(obj){for(const key in obj)void 0===obj[key]&&delete obj[key];return obj}function merge(defaults,route,options){if("string"==typeof route){let[method,url]=route.split(" ");options=Object.assign(url?{method,url}:{url:method},options)}else options=Object.assign({},route);options.headers=function lowercaseKeys(object){return object?Object.keys(object).reduce(((newObj,key)=>(newObj[key.toLowerCase()]=object[key],newObj)),{}):{}}(options.headers),removeUndefinedProperties(options),removeUndefinedProperties(options.headers);const mergedOptions=mergeDeep(defaults||{},options);return defaults&&defaults.mediaType.previews.length&&(mergedOptions.mediaType.previews=defaults.mediaType.previews.filter((preview=>!mergedOptions.mediaType.previews.includes(preview))).concat(mergedOptions.mediaType.previews)),mergedOptions.mediaType.previews=mergedOptions.mediaType.previews.map((preview=>preview.replace(/-preview/,""))),mergedOptions}const urlVariableRegex=/\{[^}]+\}/g;function removeNonChars(variableName){return variableName.replace(/^\W+|\W+$/g,"").split(/,/)}function omit(object,keysToOmit){return Object.keys(object).filter((option=>!keysToOmit.includes(option))).reduce(((obj,key)=>(obj[key]=object[key],obj)),{})}function encodeReserved(str){return str.split(/(%[0-9A-Fa-f]{2})/g).map((function(part){return/%[0-9A-Fa-f]/.test(part)||(part=encodeURI(part).replace(/%5B/g,"[").replace(/%5D/g,"]")),part})).join("")}function encodeUnreserved(str){return encodeURIComponent(str).replace(/[!'()*]/g,(function(c){return"%"+c.charCodeAt(0).toString(16).toUpperCase()}))}function encodeValue(operator,value,key){return value="+"===operator||"#"===operator?encodeReserved(value):encodeUnreserved(value),key?encodeUnreserved(key)+"="+value:value}function isDefined(value){return null!=value}function isKeyOperator(operator){return";"===operator||"&"===operator||"?"===operator}function expand(template,context){var operators=["+","#",".","/",";","?","&"];return template.replace(/\{([^\{\}]+)\}|([^\{\}]+)/g,(function(_,expression,literal){if(expression){let operator="";const values=[];if(-1!==operators.indexOf(expression.charAt(0))&&(operator=expression.charAt(0),expression=expression.substr(1)),expression.split(/,/g).forEach((function(variable){var tmp=/([^:\*]*)(?::(\d+)|(\*))?/.exec(variable);values.push(function getValues(context,operator,key,modifier){var value=context[key],result=[];if(isDefined(value)&&""!==value)if("string"==typeof value||"number"==typeof value||"boolean"==typeof value)value=value.toString(),modifier&&"*"!==modifier&&(value=value.substring(0,parseInt(modifier,10))),result.push(encodeValue(operator,value,isKeyOperator(operator)?key:""));else if("*"===modifier)Array.isArray(value)?value.filter(isDefined).forEach((function(value){result.push(encodeValue(operator,value,isKeyOperator(operator)?key:""))})):Object.keys(value).forEach((function(k){isDefined(value[k])&&result.push(encodeValue(operator,value[k],k))}));else{const tmp=[];Array.isArray(value)?value.filter(isDefined).forEach((function(value){tmp.push(encodeValue(operator,value))})):Object.keys(value).forEach((function(k){isDefined(value[k])&&(tmp.push(encodeUnreserved(k)),tmp.push(encodeValue(operator,value[k].toString())))})),isKeyOperator(operator)?result.push(encodeUnreserved(key)+"="+tmp.join(",")):0!==tmp.length&&result.push(tmp.join(","))}else";"===operator?isDefined(value)&&result.push(encodeUnreserved(key)):""!==value||"&"!==operator&&"?"!==operator?""===value&&result.push(""):result.push(encodeUnreserved(key)+"=");return result}(context,operator,tmp[1],tmp[2]||tmp[3]))})),operator&&"+"!==operator){var separator=",";return"?"===operator?separator="&":"#"!==operator&&(separator=operator),(0!==values.length?operator:"")+values.join(separator)}return values.join(",")}return encodeReserved(literal)}))}function parse(options){let body,method=options.method.toUpperCase(),url=(options.url||"/").replace(/:([a-z]\w+)/g,"{$1}"),headers=Object.assign({},options.headers),parameters=omit(options,["method","baseUrl","url","headers","request","mediaType"]);const urlVariableNames=function extractUrlVariableNames(url){const matches=url.match(urlVariableRegex);return matches?matches.map(removeNonChars).reduce(((a,b)=>a.concat(b)),[]):[]}(url);url=function parseUrl(template){return{expand:expand.bind(null,template)}}(url).expand(parameters),/^http/.test(url)||(url=options.baseUrl+url);const remainingParameters=omit(parameters,Object.keys(options).filter((option=>urlVariableNames.includes(option))).concat("baseUrl"));if(!/application\/octet-stream/i.test(headers.accept)&&(options.mediaType.format&&(headers.accept=headers.accept.split(/,/).map((preview=>preview.replace(/application\/vnd(\.\w+)(\.v3)?(\.\w+)?(\+json)?$/,`application/vnd$1$2.${options.mediaType.format}`))).join(",")),options.mediaType.previews.length)){const previewsFromAcceptHeader=headers.accept.match(/[\w-]+(?=-preview)/g)||[];headers.accept=previewsFromAcceptHeader.concat(options.mediaType.previews).map((preview=>`application/vnd.github.${preview}-preview${options.mediaType.format?`.${options.mediaType.format}`:"+json"}`)).join(",")}return["GET","HEAD"].includes(method)?url=function addQueryParameters(url,parameters){const separator=/\?/.test(url)?"&":"?",names=Object.keys(parameters);return 0===names.length?url:url+separator+names.map((name=>"q"===name?"q="+parameters.q.split("+").map(encodeURIComponent).join("+"):`${name}=${encodeURIComponent(parameters[name])}`)).join("&")}(url,remainingParameters):"data"in remainingParameters?body=remainingParameters.data:Object.keys(remainingParameters).length?body=remainingParameters:headers["content-length"]=0,headers["content-type"]||void 0===body||(headers["content-type"]="application/json; charset=utf-8"),["PATCH","PUT"].includes(method)&&void 0===body&&(body=""),Object.assign({method,url,headers},void 0!==body?{body}:null,options.request?{request:options.request}:null)}function endpointWithDefaults(defaults,route,options){return parse(merge(defaults,route,options))}const endpoint=function withDefaults(oldDefaults,newDefaults){const DEFAULTS=merge(oldDefaults,newDefaults),endpoint=endpointWithDefaults.bind(null,DEFAULTS);return Object.assign(endpoint,{DEFAULTS,defaults:withDefaults.bind(null,DEFAULTS),merge:merge.bind(null,DEFAULTS),parse})}(null,{method:"GET",baseUrl:"https://api.github.com",headers:{accept:"application/vnd.github.v3+json","user-agent":`octokit-endpoint.js/6.0.10 ${getUserAgent()}`},mediaType:{format:"",previews:[]}}),external_stream_namespaceObject=require("stream");var external_http_=__webpack_require__(605);const external_url_namespaceObject=require("url");var external_https_=__webpack_require__(211);const external_zlib_namespaceObject=require("zlib"),Readable=external_stream_namespaceObject.Readable,BUFFER=Symbol("buffer"),TYPE=Symbol("type");class Blob{constructor(){this[TYPE]="";const blobParts=arguments[0],options=arguments[1],buffers=[];let size=0;if(blobParts){const a=blobParts,length=Number(a.length);for(let i=0;i<length;i++){const element=a[i];let buffer;buffer=element instanceof Buffer?element:ArrayBuffer.isView(element)?Buffer.from(element.buffer,element.byteOffset,element.byteLength):element instanceof ArrayBuffer?Buffer.from(element):element instanceof Blob?element[BUFFER]:Buffer.from("string"==typeof element?element:String(element)),size+=buffer.length,buffers.push(buffer)}}this[BUFFER]=Buffer.concat(buffers);let type=options&&void 0!==options.type&&String(options.type).toLowerCase();type&&!/[^\u0020-\u007E]/.test(type)&&(this[TYPE]=type)}get size(){return this[BUFFER].length}get type(){return this[TYPE]}text(){return Promise.resolve(this[BUFFER].toString())}arrayBuffer(){const buf=this[BUFFER],ab=buf.buffer.slice(buf.byteOffset,buf.byteOffset+buf.byteLength);return Promise.resolve(ab)}stream(){const readable=new Readable;return readable._read=function(){},readable.push(this[BUFFER]),readable.push(null),readable}toString(){return"[object Blob]"}slice(){const size=this.size,start=arguments[0],end=arguments[1];let relativeStart,relativeEnd;relativeStart=void 0===start?0:start<0?Math.max(size+start,0):Math.min(start,size),relativeEnd=void 0===end?size:end<0?Math.max(size+end,0):Math.min(end,size);const span=Math.max(relativeEnd-relativeStart,0),slicedBuffer=this[BUFFER].slice(relativeStart,relativeStart+span),blob=new Blob([],{type:arguments[2]});return blob[BUFFER]=slicedBuffer,blob}}function FetchError(message,type,systemError){Error.call(this,message),this.message=message,this.type=type,systemError&&(this.code=this.errno=systemError.code),Error.captureStackTrace(this,this.constructor)}let convert;Object.defineProperties(Blob.prototype,{size:{enumerable:!0},type:{enumerable:!0},slice:{enumerable:!0}}),Object.defineProperty(Blob.prototype,Symbol.toStringTag,{value:"Blob",writable:!1,enumerable:!1,configurable:!0}),FetchError.prototype=Object.create(Error.prototype),FetchError.prototype.constructor=FetchError,FetchError.prototype.name="FetchError";try{convert=require("encoding").convert}catch(e){}const INTERNALS=Symbol("Body internals"),PassThrough=external_stream_namespaceObject.PassThrough;function Body(body){var _this=this,_ref=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},_ref$size=_ref.size;let size=void 0===_ref$size?0:_ref$size;var _ref$timeout=_ref.timeout;let timeout=void 0===_ref$timeout?0:_ref$timeout;null==body?body=null:isURLSearchParams(body)?body=Buffer.from(body.toString()):isBlob(body)||Buffer.isBuffer(body)||("[object ArrayBuffer]"===Object.prototype.toString.call(body)?body=Buffer.from(body):ArrayBuffer.isView(body)?body=Buffer.from(body.buffer,body.byteOffset,body.byteLength):body instanceof external_stream_namespaceObject||(body=Buffer.from(String(body)))),this[INTERNALS]={body,disturbed:!1,error:null},this.size=size,this.timeout=timeout,body instanceof external_stream_namespaceObject&&body.on("error",(function(err){const error="AbortError"===err.name?err:new FetchError(`Invalid response body while trying to fetch ${_this.url}: ${err.message}`,"system",err);_this[INTERNALS].error=error}))}function consumeBody(){var _this4=this;if(this[INTERNALS].disturbed)return Body.Promise.reject(new TypeError(`body used already for: ${this.url}`));if(this[INTERNALS].disturbed=!0,this[INTERNALS].error)return Body.Promise.reject(this[INTERNALS].error);let body=this.body;if(null===body)return Body.Promise.resolve(Buffer.alloc(0));if(isBlob(body)&&(body=body.stream()),Buffer.isBuffer(body))return Body.Promise.resolve(body);if(!(body instanceof external_stream_namespaceObject))return Body.Promise.resolve(Buffer.alloc(0));let accum=[],accumBytes=0,abort=!1;return new Body.Promise((function(resolve,reject){let resTimeout;_this4.timeout&&(resTimeout=setTimeout((function(){abort=!0,reject(new FetchError(`Response timeout while trying to fetch ${_this4.url} (over ${_this4.timeout}ms)`,"body-timeout"))}),_this4.timeout)),body.on("error",(function(err){"AbortError"===err.name?(abort=!0,reject(err)):reject(new FetchError(`Invalid response body while trying to fetch ${_this4.url}: ${err.message}`,"system",err))})),body.on("data",(function(chunk){if(!abort&&null!==chunk){if(_this4.size&&accumBytes+chunk.length>_this4.size)return abort=!0,void reject(new FetchError(`content size at ${_this4.url} over limit: ${_this4.size}`,"max-size"));accumBytes+=chunk.length,accum.push(chunk)}})),body.on("end",(function(){if(!abort){clearTimeout(resTimeout);try{resolve(Buffer.concat(accum,accumBytes))}catch(err){reject(new FetchError(`Could not create Buffer from response body for ${_this4.url}: ${err.message}`,"system",err))}}}))}))}function isURLSearchParams(obj){return"object"==typeof obj&&"function"==typeof obj.append&&"function"==typeof obj.delete&&"function"==typeof obj.get&&"function"==typeof obj.getAll&&"function"==typeof obj.has&&"function"==typeof obj.set&&("URLSearchParams"===obj.constructor.name||"[object URLSearchParams]"===Object.prototype.toString.call(obj)||"function"==typeof obj.sort)}function isBlob(obj){return"object"==typeof obj&&"function"==typeof obj.arrayBuffer&&"string"==typeof obj.type&&"function"==typeof obj.stream&&"function"==typeof obj.constructor&&"string"==typeof obj.constructor.name&&/^(Blob|File)$/.test(obj.constructor.name)&&/^(Blob|File)$/.test(obj[Symbol.toStringTag])}function clone(instance){let p1,p2,body=instance.body;if(instance.bodyUsed)throw new Error("cannot clone body after it is used");return body instanceof external_stream_namespaceObject&&"function"!=typeof body.getBoundary&&(p1=new PassThrough,p2=new PassThrough,body.pipe(p1),body.pipe(p2),instance[INTERNALS].body=p1,body=p2),body}function extractContentType(body){return null===body?null:"string"==typeof body?"text/plain;charset=UTF-8":isURLSearchParams(body)?"application/x-www-form-urlencoded;charset=UTF-8":isBlob(body)?body.type||null:Buffer.isBuffer(body)||"[object ArrayBuffer]"===Object.prototype.toString.call(body)||ArrayBuffer.isView(body)?null:"function"==typeof body.getBoundary?`multipart/form-data;boundary=${body.getBoundary()}`:body instanceof external_stream_namespaceObject?null:"text/plain;charset=UTF-8"}function getTotalBytes(instance){const body=instance.body;return null===body?0:isBlob(body)?body.size:Buffer.isBuffer(body)?body.length:body&&"function"==typeof body.getLengthSync&&(body._lengthRetrievers&&0==body._lengthRetrievers.length||body.hasKnownLength&&body.hasKnownLength())?body.getLengthSync():null}Body.prototype={get body(){return this[INTERNALS].body},get bodyUsed(){return this[INTERNALS].disturbed},arrayBuffer(){return consumeBody.call(this).then((function(buf){return buf.buffer.slice(buf.byteOffset,buf.byteOffset+buf.byteLength)}))},blob(){let ct=this.headers&&this.headers.get("content-type")||"";return consumeBody.call(this).then((function(buf){return Object.assign(new Blob([],{type:ct.toLowerCase()}),{[BUFFER]:buf})}))},json(){var _this2=this;return consumeBody.call(this).then((function(buffer){try{return JSON.parse(buffer.toString())}catch(err){return Body.Promise.reject(new FetchError(`invalid json response body at ${_this2.url} reason: ${err.message}`,"invalid-json"))}}))},text(){return consumeBody.call(this).then((function(buffer){return buffer.toString()}))},buffer(){return consumeBody.call(this)},textConverted(){var _this3=this;return consumeBody.call(this).then((function(buffer){return function convertBody(buffer,headers){if("function"!=typeof convert)throw new Error("The package `encoding` must be installed to use the textConverted() function");const ct=headers.get("content-type");let res,str,charset="utf-8";ct&&(res=/charset=([^;]*)/i.exec(ct));str=buffer.slice(0,1024).toString(),!res&&str&&(res=/<meta.+?charset=(['"])(.+?)\1/i.exec(str));!res&&str&&(res=/<meta[\s]+?http-equiv=(['"])content-type\1[\s]+?content=(['"])(.+?)\2/i.exec(str),res||(res=/<meta[\s]+?content=(['"])(.+?)\1[\s]+?http-equiv=(['"])content-type\3/i.exec(str),res&&res.pop()),res&&(res=/charset=(.*)/i.exec(res.pop())));!res&&str&&(res=/<\?xml.+?encoding=(['"])(.+?)\1/i.exec(str));res&&(charset=res.pop(),"gb2312"!==charset&&"gbk"!==charset||(charset="gb18030"));return convert(buffer,"UTF-8",charset).toString()}(buffer,_this3.headers)}))}},Object.defineProperties(Body.prototype,{body:{enumerable:!0},bodyUsed:{enumerable:!0},arrayBuffer:{enumerable:!0},blob:{enumerable:!0},json:{enumerable:!0},text:{enumerable:!0}}),Body.mixIn=function(proto){for(const name of Object.getOwnPropertyNames(Body.prototype))if(!(name in proto)){const desc=Object.getOwnPropertyDescriptor(Body.prototype,name);Object.defineProperty(proto,name,desc)}},Body.Promise=global.Promise;const invalidTokenRegex=/[^\^_`a-zA-Z\-0-9!#$%&'*+.|~]/,invalidHeaderCharRegex=/[^\t\x20-\x7e\x80-\xff]/;function validateName(name){if(name=`${name}`,invalidTokenRegex.test(name)||""===name)throw new TypeError(`${name} is not a legal HTTP header name`)}function validateValue(value){if(value=`${value}`,invalidHeaderCharRegex.test(value))throw new TypeError(`${value} is not a legal HTTP header value`)}function find(map,name){name=name.toLowerCase();for(const key in map)if(key.toLowerCase()===name)return key}const MAP=Symbol("map");class Headers{constructor(){let init=arguments.length>0&&void 0!==arguments[0]?arguments[0]:void 0;if(this[MAP]=Object.create(null),init instanceof Headers){const rawHeaders=init.raw(),headerNames=Object.keys(rawHeaders);for(const headerName of headerNames)for(const value of rawHeaders[headerName])this.append(headerName,value)}else if(null==init);else{if("object"!=typeof init)throw new TypeError("Provided initializer must be an object");{const method=init[Symbol.iterator];if(null!=method){if("function"!=typeof method)throw new TypeError("Header pairs must be iterable");const pairs=[];for(const pair of init){if("object"!=typeof pair||"function"!=typeof pair[Symbol.iterator])throw new TypeError("Each header pair must be iterable");pairs.push(Array.from(pair))}for(const pair of pairs){if(2!==pair.length)throw new TypeError("Each header pair must be a name/value tuple");this.append(pair[0],pair[1])}}else for(const key of Object.keys(init)){const value=init[key];this.append(key,value)}}}}get(name){validateName(name=`${name}`);const key=find(this[MAP],name);return void 0===key?null:this[MAP][key].join(", ")}forEach(callback){let thisArg=arguments.length>1&&void 0!==arguments[1]?arguments[1]:void 0,pairs=getHeaders(this),i=0;for(;i<pairs.length;){var _pairs$i=pairs[i];const name=_pairs$i[0],value=_pairs$i[1];callback.call(thisArg,value,name,this),pairs=getHeaders(this),i++}}set(name,value){value=`${value}`,validateName(name=`${name}`),validateValue(value);const key=find(this[MAP],name);this[MAP][void 0!==key?key:name]=[value]}append(name,value){value=`${value}`,validateName(name=`${name}`),validateValue(value);const key=find(this[MAP],name);void 0!==key?this[MAP][key].push(value):this[MAP][name]=[value]}has(name){return validateName(name=`${name}`),void 0!==find(this[MAP],name)}delete(name){validateName(name=`${name}`);const key=find(this[MAP],name);void 0!==key&&delete this[MAP][key]}raw(){return this[MAP]}keys(){return createHeadersIterator(this,"key")}values(){return createHeadersIterator(this,"value")}[Symbol.iterator](){return createHeadersIterator(this,"key+value")}}function getHeaders(headers){let kind=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"key+value";const keys=Object.keys(headers[MAP]).sort();return keys.map("key"===kind?function(k){return k.toLowerCase()}:"value"===kind?function(k){return headers[MAP][k].join(", ")}:function(k){return[k.toLowerCase(),headers[MAP][k].join(", ")]})}Headers.prototype.entries=Headers.prototype[Symbol.iterator],Object.defineProperty(Headers.prototype,Symbol.toStringTag,{value:"Headers",writable:!1,enumerable:!1,configurable:!0}),Object.defineProperties(Headers.prototype,{get:{enumerable:!0},forEach:{enumerable:!0},set:{enumerable:!0},append:{enumerable:!0},has:{enumerable:!0},delete:{enumerable:!0},keys:{enumerable:!0},values:{enumerable:!0},entries:{enumerable:!0}});const INTERNAL=Symbol("internal");function createHeadersIterator(target,kind){const iterator=Object.create(HeadersIteratorPrototype);return iterator[INTERNAL]={target,kind,index:0},iterator}const HeadersIteratorPrototype=Object.setPrototypeOf({next(){if(!this||Object.getPrototypeOf(this)!==HeadersIteratorPrototype)throw new TypeError("Value of `this` is not a HeadersIterator");var _INTERNAL=this[INTERNAL];const target=_INTERNAL.target,kind=_INTERNAL.kind,index=_INTERNAL.index,values=getHeaders(target,kind);return index>=values.length?{value:void 0,done:!0}:(this[INTERNAL].index=index+1,{value:values[index],done:!1})}},Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));function exportNodeCompatibleHeaders(headers){const obj=Object.assign({__proto__:null},headers[MAP]),hostHeaderKey=find(headers[MAP],"Host");return void 0!==hostHeaderKey&&(obj[hostHeaderKey]=obj[hostHeaderKey][0]),obj}Object.defineProperty(HeadersIteratorPrototype,Symbol.toStringTag,{value:"HeadersIterator",writable:!1,enumerable:!1,configurable:!0});const INTERNALS$1=Symbol("Response internals"),STATUS_CODES=external_http_.STATUS_CODES;class Response{constructor(){let body=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,opts=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};Body.call(this,body,opts);const status=opts.status||200,headers=new Headers(opts.headers);if(null!=body&&!headers.has("Content-Type")){const contentType=extractContentType(body);contentType&&headers.append("Content-Type",contentType)}this[INTERNALS$1]={url:opts.url,status,statusText:opts.statusText||STATUS_CODES[status],headers,counter:opts.counter}}get url(){return this[INTERNALS$1].url||""}get status(){return this[INTERNALS$1].status}get ok(){return this[INTERNALS$1].status>=200&&this[INTERNALS$1].status<300}get redirected(){return this[INTERNALS$1].counter>0}get statusText(){return this[INTERNALS$1].statusText}get headers(){return this[INTERNALS$1].headers}clone(){return new Response(clone(this),{url:this.url,status:this.status,statusText:this.statusText,headers:this.headers,ok:this.ok,redirected:this.redirected})}}Body.mixIn(Response.prototype),Object.defineProperties(Response.prototype,{url:{enumerable:!0},status:{enumerable:!0},ok:{enumerable:!0},redirected:{enumerable:!0},statusText:{enumerable:!0},headers:{enumerable:!0},clone:{enumerable:!0}}),Object.defineProperty(Response.prototype,Symbol.toStringTag,{value:"Response",writable:!1,enumerable:!1,configurable:!0});const INTERNALS$2=Symbol("Request internals"),parse_url=external_url_namespaceObject.parse,format_url=external_url_namespaceObject.format,streamDestructionSupported="destroy"in external_stream_namespaceObject.Readable.prototype;function isRequest(input){return"object"==typeof input&&"object"==typeof input[INTERNALS$2]}class Request{constructor(input){let parsedURL,init=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};isRequest(input)?parsedURL=parse_url(input.url):(parsedURL=input&&input.href?parse_url(input.href):parse_url(`${input}`),input={});let method=init.method||input.method||"GET";if(method=method.toUpperCase(),(null!=init.body||isRequest(input)&&null!==input.body)&&("GET"===method||"HEAD"===method))throw new TypeError("Request with GET/HEAD method cannot have body");let inputBody=null!=init.body?init.body:isRequest(input)&&null!==input.body?clone(input):null;Body.call(this,inputBody,{timeout:init.timeout||input.timeout||0,size:init.size||input.size||0});const headers=new Headers(init.headers||input.headers||{});if(null!=inputBody&&!headers.has("Content-Type")){const contentType=extractContentType(inputBody);contentType&&headers.append("Content-Type",contentType)}let signal=isRequest(input)?input.signal:null;if("signal"in init&&(signal=init.signal),null!=signal&&!function isAbortSignal(signal){const proto=signal&&"object"==typeof signal&&Object.getPrototypeOf(signal);return!(!proto||"AbortSignal"!==proto.constructor.name)}(signal))throw new TypeError("Expected signal to be an instanceof AbortSignal");this[INTERNALS$2]={method,redirect:init.redirect||input.redirect||"follow",headers,parsedURL,signal},this.follow=void 0!==init.follow?init.follow:void 0!==input.follow?input.follow:20,this.compress=void 0!==init.compress?init.compress:void 0===input.compress||input.compress,this.counter=init.counter||input.counter||0,this.agent=init.agent||input.agent}get method(){return this[INTERNALS$2].method}get url(){return format_url(this[INTERNALS$2].parsedURL)}get headers(){return this[INTERNALS$2].headers}get redirect(){return this[INTERNALS$2].redirect}get signal(){return this[INTERNALS$2].signal}clone(){return new Request(this)}}function AbortError(message){Error.call(this,message),this.type="aborted",this.message=message,Error.captureStackTrace(this,this.constructor)}Body.mixIn(Request.prototype),Object.defineProperty(Request.prototype,Symbol.toStringTag,{value:"Request",writable:!1,enumerable:!1,configurable:!0}),Object.defineProperties(Request.prototype,{method:{enumerable:!0},url:{enumerable:!0},headers:{enumerable:!0},redirect:{enumerable:!0},clone:{enumerable:!0},signal:{enumerable:!0}}),AbortError.prototype=Object.create(Error.prototype),AbortError.prototype.constructor=AbortError,AbortError.prototype.name="AbortError";const PassThrough$1=external_stream_namespaceObject.PassThrough,resolve_url=external_url_namespaceObject.resolve;function fetch(url,opts){if(!fetch.Promise)throw new Error("native promise missing, set fetch.Promise to your favorite alternative");return Body.Promise=fetch.Promise,new fetch.Promise((function(resolve,reject){const request=new Request(url,opts),options=function getNodeRequestOptions(request){const parsedURL=request[INTERNALS$2].parsedURL,headers=new Headers(request[INTERNALS$2].headers);if(headers.has("Accept")||headers.set("Accept","*/*"),!parsedURL.protocol||!parsedURL.hostname)throw new TypeError("Only absolute URLs are supported");if(!/^https?:$/.test(parsedURL.protocol))throw new TypeError("Only HTTP(S) protocols are supported");if(request.signal&&request.body instanceof external_stream_namespaceObject.Readable&&!streamDestructionSupported)throw new Error("Cancellation of streamed requests with AbortSignal is not supported in node < 8");let contentLengthValue=null;if(null==request.body&&/^(POST|PUT)$/i.test(request.method)&&(contentLengthValue="0"),null!=request.body){const totalBytes=getTotalBytes(request);"number"==typeof totalBytes&&(contentLengthValue=String(totalBytes))}contentLengthValue&&headers.set("Content-Length",contentLengthValue),headers.has("User-Agent")||headers.set("User-Agent","node-fetch/1.0 (+https://github.com/bitinn/node-fetch)"),request.compress&&!headers.has("Accept-Encoding")&&headers.set("Accept-Encoding","gzip,deflate");let agent=request.agent;return"function"==typeof agent&&(agent=agent(parsedURL)),headers.has("Connection")||agent||headers.set("Connection","close"),Object.assign({},parsedURL,{method:request.method,headers:exportNodeCompatibleHeaders(headers),agent})}(request),send=("https:"===options.protocol?external_https_:external_http_).request,signal=request.signal;let response=null;const abort=function abort(){let error=new AbortError("The user aborted a request.");reject(error),request.body&&request.body instanceof external_stream_namespaceObject.Readable&&request.body.destroy(error),response&&response.body&&response.body.emit("error",error)};if(signal&&signal.aborted)return void abort();const abortAndFinalize=function abortAndFinalize(){abort(),finalize()},req=send(options);let reqTimeout;function finalize(){req.abort(),signal&&signal.removeEventListener("abort",abortAndFinalize),clearTimeout(reqTimeout)}signal&&signal.addEventListener("abort",abortAndFinalize),request.timeout&&req.once("socket",(function(socket){reqTimeout=setTimeout((function(){reject(new FetchError(`network timeout at: ${request.url}`,"request-timeout")),finalize()}),request.timeout)})),req.on("error",(function(err){reject(new FetchError(`request to ${request.url} failed, reason: ${err.message}`,"system",err)),finalize()})),req.on("response",(function(res){clearTimeout(reqTimeout);const headers=function createHeadersLenient(obj){const headers=new Headers;for(const name of Object.keys(obj))if(!invalidTokenRegex.test(name))if(Array.isArray(obj[name]))for(const val of obj[name])invalidHeaderCharRegex.test(val)||(void 0===headers[MAP][name]?headers[MAP][name]=[val]:headers[MAP][name].push(val));else invalidHeaderCharRegex.test(obj[name])||(headers[MAP][name]=[obj[name]]);return headers}(res.headers);if(fetch.isRedirect(res.statusCode)){const location=headers.get("Location"),locationURL=null===location?null:resolve_url(request.url,location);switch(request.redirect){case"error":return reject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`,"no-redirect")),void finalize();case"manual":if(null!==locationURL)try{headers.set("Location",locationURL)}catch(err){reject(err)}break;case"follow":if(null===locationURL)break;if(request.counter>=request.follow)return reject(new FetchError(`maximum redirect reached at: ${request.url}`,"max-redirect")),void finalize();const requestOpts={headers:new Headers(request.headers),follow:request.follow,counter:request.counter+1,agent:request.agent,compress:request.compress,method:request.method,body:request.body,signal:request.signal,timeout:request.timeout,size:request.size};return 303!==res.statusCode&&request.body&&null===getTotalBytes(request)?(reject(new FetchError("Cannot follow redirect with body being a readable stream","unsupported-redirect")),void finalize()):(303!==res.statusCode&&(301!==res.statusCode&&302!==res.statusCode||"POST"!==request.method)||(requestOpts.method="GET",requestOpts.body=void 0,requestOpts.headers.delete("content-length")),resolve(fetch(new Request(locationURL,requestOpts))),void finalize())}}res.once("end",(function(){signal&&signal.removeEventListener("abort",abortAndFinalize)}));let body=res.pipe(new PassThrough$1);const response_options={url:request.url,status:res.statusCode,statusText:res.statusMessage,headers,size:request.size,timeout:request.timeout,counter:request.counter},codings=headers.get("Content-Encoding");if(!request.compress||"HEAD"===request.method||null===codings||204===res.statusCode||304===res.statusCode)return response=new Response(body,response_options),void resolve(response);const zlibOptions={flush:external_zlib_namespaceObject.Z_SYNC_FLUSH,finishFlush:external_zlib_namespaceObject.Z_SYNC_FLUSH};if("gzip"==codings||"x-gzip"==codings)return body=body.pipe(external_zlib_namespaceObject.createGunzip(zlibOptions)),response=new Response(body,response_options),void resolve(response);if("deflate"!=codings&&"x-deflate"!=codings){if("br"==codings&&"function"==typeof external_zlib_namespaceObject.createBrotliDecompress)return body=body.pipe(external_zlib_namespaceObject.createBrotliDecompress()),response=new Response(body,response_options),void resolve(response);response=new Response(body,response_options),resolve(response)}else{res.pipe(new PassThrough$1).once("data",(function(chunk){body=8==(15&chunk[0])?body.pipe(external_zlib_namespaceObject.createInflate()):body.pipe(external_zlib_namespaceObject.createInflateRaw()),response=new Response(body,response_options),resolve(response)}))}})),function writeToStream(dest,instance){const body=instance.body;null===body?dest.end():isBlob(body)?body.stream().pipe(dest):Buffer.isBuffer(body)?(dest.write(body),dest.end()):body.pipe(dest)}(req,request)}))}fetch.isRedirect=function(code){return 301===code||302===code||303===code||307===code||308===code},fetch.Promise=global.Promise;const lib=fetch;class Deprecation extends Error{constructor(message){super(message),Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor),this.name="Deprecation"}}var once=__webpack_require__(778);const logOnce=__webpack_require__.n(once)()((deprecation=>console.warn(deprecation)));class RequestError extends Error{constructor(message,statusCode,options){super(message),Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor),this.name="HttpError",this.status=statusCode,Object.defineProperty(this,"code",{get:()=>(logOnce(new Deprecation("[@octokit/request-error] `error.code` is deprecated, use `error.status`.")),statusCode)}),this.headers=options.headers||{};const requestCopy=Object.assign({},options.request);options.request.headers.authorization&&(requestCopy.headers=Object.assign({},options.request.headers,{authorization:options.request.headers.authorization.replace(/ .*$/," [REDACTED]")})),requestCopy.url=requestCopy.url.replace(/\bclient_secret=\w+/g,"client_secret=[REDACTED]").replace(/\baccess_token=\w+/g,"access_token=[REDACTED]"),this.request=requestCopy}}function fetchWrapper(requestOptions){(isPlainObject(requestOptions.body)||Array.isArray(requestOptions.body))&&(requestOptions.body=JSON.stringify(requestOptions.body));let status,url,headers={};return(requestOptions.request&&requestOptions.request.fetch||lib)(requestOptions.url,Object.assign({method:requestOptions.method,body:requestOptions.body,headers:requestOptions.headers,redirect:requestOptions.redirect},requestOptions.request)).then((response=>{url=response.url,status=response.status;for(const keyAndValue of response.headers)headers[keyAndValue[0]]=keyAndValue[1];if(204===status||205===status)return;if("HEAD"===requestOptions.method){if(status<400)return;throw new RequestError(response.statusText,status,{headers,request:requestOptions})}if(304===status)throw new RequestError("Not modified",status,{headers,request:requestOptions});if(status>=400)return response.text().then((message=>{const error=new RequestError(message,status,{headers,request:requestOptions});try{let responseBody=JSON.parse(error.message);Object.assign(error,responseBody);let errors=responseBody.errors;error.message=error.message+": "+errors.map(JSON.stringify).join(", ")}catch(e){}throw error}));const contentType=response.headers.get("content-type");return/application\/json/.test(contentType)?response.json():!contentType||/^text\/|charset=utf-8$/.test(contentType)?response.text():function getBufferResponse(response){return response.arrayBuffer()}(response)})).then((data=>({status,url,headers,data}))).catch((error=>{if(error instanceof RequestError)throw error;throw new RequestError(error.message,500,{headers,request:requestOptions})}))}const request=function dist_web_withDefaults(oldEndpoint,newDefaults){const endpoint=oldEndpoint.defaults(newDefaults);return Object.assign((function(route,parameters){const endpointOptions=endpoint.merge(route,parameters);if(!endpointOptions.request||!endpointOptions.request.hook)return fetchWrapper(endpoint.parse(endpointOptions));const request=(route,parameters)=>fetchWrapper(endpoint.parse(endpoint.merge(route,parameters)));return Object.assign(request,{endpoint,defaults:dist_web_withDefaults.bind(null,endpoint)}),endpointOptions.request.hook(request,endpointOptions)}),{endpoint,defaults:dist_web_withDefaults.bind(null,endpoint)})}(endpoint,{headers:{"user-agent":`octokit-request.js/5.4.12 ${getUserAgent()}`}});class GraphqlError extends Error{constructor(request,response){super(response.data.errors[0].message),Object.assign(this,response.data),Object.assign(this,{headers:response.headers}),this.name="GraphqlError",this.request=request,Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}}const NON_VARIABLE_OPTIONS=["method","baseUrl","url","headers","request","query","mediaType"],GHES_V3_SUFFIX_REGEX=/\/api\/v3\/?$/;function graphql_dist_web_withDefaults(request$1,newDefaults){const newRequest=request$1.defaults(newDefaults);return Object.assign(((query,options)=>function graphql(request,query,options){if("string"==typeof query&&options&&"query"in options)return Promise.reject(new Error('[@octokit/graphql] "query" cannot be used as variable name'));const parsedOptions="string"==typeof query?Object.assign({query},options):query,requestOptions=Object.keys(parsedOptions).reduce(((result,key)=>NON_VARIABLE_OPTIONS.includes(key)?(result[key]=parsedOptions[key],result):(result.variables||(result.variables={}),result.variables[key]=parsedOptions[key],result)),{}),baseUrl=parsedOptions.baseUrl||request.endpoint.DEFAULTS.baseUrl;return GHES_V3_SUFFIX_REGEX.test(baseUrl)&&(requestOptions.url=baseUrl.replace(GHES_V3_SUFFIX_REGEX,"/api/graphql")),request(requestOptions).then((response=>{if(response.data.errors){const headers={};for(const key of Object.keys(response.headers))headers[key]=response.headers[key];throw new GraphqlError(requestOptions,{headers,data:response.data})}return response.data.data}))}(newRequest,query,options)),{defaults:graphql_dist_web_withDefaults.bind(null,newRequest),endpoint:request.endpoint})}graphql_dist_web_withDefaults(request,{headers:{"user-agent":`octokit-graphql.js/4.5.8 ${getUserAgent()}`},method:"POST",url:"/graphql"});async function auth(token){const tokenType=3===token.split(/\./).length?"app":/^v\d+\./.test(token)?"installation":"oauth";return{type:"token",token,tokenType}}async function hook(token,request,route,parameters){const endpoint=request.endpoint.merge(route,parameters);return endpoint.headers.authorization=function withAuthorizationPrefix(token){return 3===token.split(/\./).length?`bearer ${token}`:`token ${token}`}(token),request(endpoint)}const createTokenAuth=function createTokenAuth(token){if(!token)throw new Error("[@octokit/auth-token] No token passed to createTokenAuth");if("string"!=typeof token)throw new Error("[@octokit/auth-token] Token passed to createTokenAuth is not a string");return token=token.replace(/^(token|bearer) +/i,""),Object.assign(auth.bind(null,token),{hook:hook.bind(null,token)})};class Octokit{constructor(options={}){const hook=new before_after_hook.Collection,requestDefaults={baseUrl:request.endpoint.DEFAULTS.baseUrl,headers:{},request:Object.assign({},options.request,{hook:hook.bind(null,"request")}),mediaType:{previews:[],format:""}};if(requestDefaults.headers["user-agent"]=[options.userAgent,`octokit-core.js/3.2.4 ${getUserAgent()}`].filter(Boolean).join(" "),options.baseUrl&&(requestDefaults.baseUrl=options.baseUrl),options.previews&&(requestDefaults.mediaType.previews=options.previews),options.timeZone&&(requestDefaults.headers["time-zone"]=options.timeZone),this.request=request.defaults(requestDefaults),this.graphql=function withCustomRequest(customRequest){return graphql_dist_web_withDefaults(customRequest,{method:"POST",url:"/graphql"})}(this.request).defaults(requestDefaults),this.log=Object.assign({debug:()=>{},info:()=>{},warn:console.warn.bind(console),error:console.error.bind(console)},options.log),this.hook=hook,options.authStrategy){const{authStrategy,...otherOptions}=options,auth=authStrategy(Object.assign({request:this.request,log:this.log,octokit:this,octokitOptions:otherOptions},options.auth));hook.wrap("request",auth.hook),this.auth=auth}else if(options.auth){const auth=createTokenAuth(options.auth);hook.wrap("request",auth.hook),this.auth=auth}else this.auth=async()=>({type:"unauthenticated"});this.constructor.plugins.forEach((plugin=>{Object.assign(this,plugin(this,options))}))}static defaults(defaults){return class extends(this){constructor(...args){const options=args[0]||{};super("function"!=typeof defaults?Object.assign({},defaults,options,options.userAgent&&defaults.userAgent?{userAgent:`${options.userAgent} ${defaults.userAgent}`}:null):defaults(options))}}}static plugin(...newPlugins){var _a;const currentPlugins=this.plugins;return(_a=class extends(this){}).plugins=currentPlugins.concat(newPlugins.filter((plugin=>!currentPlugins.includes(plugin)))),_a}}Octokit.VERSION="3.2.4",Octokit.plugins=[]},745:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{composePaginateRest:()=>composePaginateRest,paginateRest:()=>paginateRest});function iterator(octokit,route,parameters){const options="function"==typeof route?route.endpoint(parameters):octokit.request.endpoint(route,parameters),requestMethod="function"==typeof route?route:octokit.request,method=options.method,headers=options.headers;let url=options.url;return{[Symbol.asyncIterator]:()=>({async next(){if(!url)return{done:!0};const normalizedResponse=function normalizePaginatedListResponse(response){if(!("total_count"in response.data)||"url"in response.data)return response;const incompleteResults=response.data.incomplete_results,repositorySelection=response.data.repository_selection,totalCount=response.data.total_count;delete response.data.incomplete_results,delete response.data.repository_selection,delete response.data.total_count;const namespaceKey=Object.keys(response.data)[0],data=response.data[namespaceKey];return response.data=data,void 0!==incompleteResults&&(response.data.incomplete_results=incompleteResults),void 0!==repositorySelection&&(response.data.repository_selection=repositorySelection),response.data.total_count=totalCount,response}(await requestMethod({method,url,headers}));return url=((normalizedResponse.headers.link||"").match(/<([^>]+)>;\s*rel="next"/)||[])[1],{value:normalizedResponse}}})}}function paginate(octokit,route,parameters,mapFn){return"function"==typeof parameters&&(mapFn=parameters,parameters=void 0),gather(octokit,[],iterator(octokit,route,parameters)[Symbol.asyncIterator](),mapFn)}function gather(octokit,results,iterator,mapFn){return iterator.next().then((result=>{if(result.done)return results;let earlyExit=!1;return results=results.concat(mapFn?mapFn(result.value,(function done(){earlyExit=!0})):result.value.data),earlyExit?results:gather(octokit,results,iterator,mapFn)}))}const composePaginateRest=Object.assign(paginate,{iterator});function paginateRest(octokit){return{paginate:Object.assign(paginate.bind(null,octokit),{iterator:iterator.bind(null,octokit)})}}paginateRest.VERSION="2.6.2"},401:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{restEndpointMethods:()=>restEndpointMethods});const Endpoints={actions:{addSelectedRepoToOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],cancelWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/cancel"],createOrUpdateOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}"],createRegistrationTokenForOrg:["POST /orgs/{org}/actions/runners/registration-token"],createRegistrationTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/registration-token"],createRemoveTokenForOrg:["POST /orgs/{org}/actions/runners/remove-token"],createRemoveTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/remove-token"],createWorkflowDispatch:["POST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches"],deleteArtifact:["DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],deleteOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}"],deleteSelfHostedRunnerFromOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}"],deleteSelfHostedRunnerFromRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}"],deleteWorkflowRun:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}"],deleteWorkflowRunLogs:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],disableSelectedRepositoryGithubActionsOrganization:["DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}"],disableWorkflow:["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/disable"],downloadArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}"],downloadJobLogsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs"],downloadWorkflowRunLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],enableSelectedRepositoryGithubActionsOrganization:["PUT /orgs/{org}/actions/permissions/repositories/{repository_id}"],enableWorkflow:["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/enable"],getAllowedActionsOrganization:["GET /orgs/{org}/actions/permissions/selected-actions"],getAllowedActionsRepository:["GET /repos/{owner}/{repo}/actions/permissions/selected-actions"],getArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],getGithubActionsPermissionsOrganization:["GET /orgs/{org}/actions/permissions"],getGithubActionsPermissionsRepository:["GET /repos/{owner}/{repo}/actions/permissions"],getJobForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}"],getOrgPublicKey:["GET /orgs/{org}/actions/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}"],getRepoPermissions:["GET /repos/{owner}/{repo}/actions/permissions",{},{renamed:["actions","getGithubActionsPermissionsRepository"]}],getRepoPublicKey:["GET /repos/{owner}/{repo}/actions/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/actions/secrets/{secret_name}"],getSelfHostedRunnerForOrg:["GET /orgs/{org}/actions/runners/{runner_id}"],getSelfHostedRunnerForRepo:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}"],getWorkflow:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}"],getWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}"],getWorkflowRunUsage:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/timing"],getWorkflowUsage:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing"],listArtifactsForRepo:["GET /repos/{owner}/{repo}/actions/artifacts"],listJobsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs"],listOrgSecrets:["GET /orgs/{org}/actions/secrets"],listRepoSecrets:["GET /repos/{owner}/{repo}/actions/secrets"],listRepoWorkflows:["GET /repos/{owner}/{repo}/actions/workflows"],listRunnerApplicationsForOrg:["GET /orgs/{org}/actions/runners/downloads"],listRunnerApplicationsForRepo:["GET /repos/{owner}/{repo}/actions/runners/downloads"],listSelectedReposForOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}/repositories"],listSelectedRepositoriesEnabledGithubActionsOrganization:["GET /orgs/{org}/actions/permissions/repositories"],listSelfHostedRunnersForOrg:["GET /orgs/{org}/actions/runners"],listSelfHostedRunnersForRepo:["GET /repos/{owner}/{repo}/actions/runners"],listWorkflowRunArtifacts:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts"],listWorkflowRuns:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs"],listWorkflowRunsForRepo:["GET /repos/{owner}/{repo}/actions/runs"],reRunWorkflow:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],setAllowedActionsOrganization:["PUT /orgs/{org}/actions/permissions/selected-actions"],setAllowedActionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions/selected-actions"],setGithubActionsPermissionsOrganization:["PUT /orgs/{org}/actions/permissions"],setGithubActionsPermissionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories"],setSelectedRepositoriesEnabledGithubActionsOrganization:["PUT /orgs/{org}/actions/permissions/repositories"]},activity:{checkRepoIsStarredByAuthenticatedUser:["GET /user/starred/{owner}/{repo}"],deleteRepoSubscription:["DELETE /repos/{owner}/{repo}/subscription"],deleteThreadSubscription:["DELETE /notifications/threads/{thread_id}/subscription"],getFeeds:["GET /feeds"],getRepoSubscription:["GET /repos/{owner}/{repo}/subscription"],getThread:["GET /notifications/threads/{thread_id}"],getThreadSubscriptionForAuthenticatedUser:["GET /notifications/threads/{thread_id}/subscription"],listEventsForAuthenticatedUser:["GET /users/{username}/events"],listNotificationsForAuthenticatedUser:["GET /notifications"],listOrgEventsForAuthenticatedUser:["GET /users/{username}/events/orgs/{org}"],listPublicEvents:["GET /events"],listPublicEventsForRepoNetwork:["GET /networks/{owner}/{repo}/events"],listPublicEventsForUser:["GET /users/{username}/events/public"],listPublicOrgEvents:["GET /orgs/{org}/events"],listReceivedEventsForUser:["GET /users/{username}/received_events"],listReceivedPublicEventsForUser:["GET /users/{username}/received_events/public"],listRepoEvents:["GET /repos/{owner}/{repo}/events"],listRepoNotificationsForAuthenticatedUser:["GET /repos/{owner}/{repo}/notifications"],listReposStarredByAuthenticatedUser:["GET /user/starred"],listReposStarredByUser:["GET /users/{username}/starred"],listReposWatchedByUser:["GET /users/{username}/subscriptions"],listStargazersForRepo:["GET /repos/{owner}/{repo}/stargazers"],listWatchedReposForAuthenticatedUser:["GET /user/subscriptions"],listWatchersForRepo:["GET /repos/{owner}/{repo}/subscribers"],markNotificationsAsRead:["PUT /notifications"],markRepoNotificationsAsRead:["PUT /repos/{owner}/{repo}/notifications"],markThreadAsRead:["PATCH /notifications/threads/{thread_id}"],setRepoSubscription:["PUT /repos/{owner}/{repo}/subscription"],setThreadSubscription:["PUT /notifications/threads/{thread_id}/subscription"],starRepoForAuthenticatedUser:["PUT /user/starred/{owner}/{repo}"],unstarRepoForAuthenticatedUser:["DELETE /user/starred/{owner}/{repo}"]},apps:{addRepoToInstallation:["PUT /user/installations/{installation_id}/repositories/{repository_id}"],checkToken:["POST /applications/{client_id}/token"],createContentAttachment:["POST /content_references/{content_reference_id}/attachments",{mediaType:{previews:["corsair"]}}],createFromManifest:["POST /app-manifests/{code}/conversions"],createInstallationAccessToken:["POST /app/installations/{installation_id}/access_tokens"],deleteAuthorization:["DELETE /applications/{client_id}/grant"],deleteInstallation:["DELETE /app/installations/{installation_id}"],deleteToken:["DELETE /applications/{client_id}/token"],getAuthenticated:["GET /app"],getBySlug:["GET /apps/{app_slug}"],getInstallation:["GET /app/installations/{installation_id}"],getOrgInstallation:["GET /orgs/{org}/installation"],getRepoInstallation:["GET /repos/{owner}/{repo}/installation"],getSubscriptionPlanForAccount:["GET /marketplace_listing/accounts/{account_id}"],getSubscriptionPlanForAccountStubbed:["GET /marketplace_listing/stubbed/accounts/{account_id}"],getUserInstallation:["GET /users/{username}/installation"],getWebhookConfigForApp:["GET /app/hook/config"],listAccountsForPlan:["GET /marketplace_listing/plans/{plan_id}/accounts"],listAccountsForPlanStubbed:["GET /marketplace_listing/stubbed/plans/{plan_id}/accounts"],listInstallationReposForAuthenticatedUser:["GET /user/installations/{installation_id}/repositories"],listInstallations:["GET /app/installations"],listInstallationsForAuthenticatedUser:["GET /user/installations"],listPlans:["GET /marketplace_listing/plans"],listPlansStubbed:["GET /marketplace_listing/stubbed/plans"],listReposAccessibleToInstallation:["GET /installation/repositories"],listSubscriptionsForAuthenticatedUser:["GET /user/marketplace_purchases"],listSubscriptionsForAuthenticatedUserStubbed:["GET /user/marketplace_purchases/stubbed"],removeRepoFromInstallation:["DELETE /user/installations/{installation_id}/repositories/{repository_id}"],resetToken:["PATCH /applications/{client_id}/token"],revokeInstallationAccessToken:["DELETE /installation/token"],suspendInstallation:["PUT /app/installations/{installation_id}/suspended"],unsuspendInstallation:["DELETE /app/installations/{installation_id}/suspended"],updateWebhookConfigForApp:["PATCH /app/hook/config"]},billing:{getGithubActionsBillingOrg:["GET /orgs/{org}/settings/billing/actions"],getGithubActionsBillingUser:["GET /users/{username}/settings/billing/actions"],getGithubPackagesBillingOrg:["GET /orgs/{org}/settings/billing/packages"],getGithubPackagesBillingUser:["GET /users/{username}/settings/billing/packages"],getSharedStorageBillingOrg:["GET /orgs/{org}/settings/billing/shared-storage"],getSharedStorageBillingUser:["GET /users/{username}/settings/billing/shared-storage"]},checks:{create:["POST /repos/{owner}/{repo}/check-runs"],createSuite:["POST /repos/{owner}/{repo}/check-suites"],get:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}"],getSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}"],listAnnotations:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations"],listForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-runs"],listForSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs"],listSuitesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-suites"],rerequestSuite:["POST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest"],setSuitesPreferences:["PATCH /repos/{owner}/{repo}/check-suites/preferences"],update:["PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}"]},codeScanning:{getAlert:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}",{},{renamedParameters:{alert_id:"alert_number"}}],listAlertsForRepo:["GET /repos/{owner}/{repo}/code-scanning/alerts"],listRecentAnalyses:["GET /repos/{owner}/{repo}/code-scanning/analyses"],updateAlert:["PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}"],uploadSarif:["POST /repos/{owner}/{repo}/code-scanning/sarifs"]},codesOfConduct:{getAllCodesOfConduct:["GET /codes_of_conduct",{mediaType:{previews:["scarlet-witch"]}}],getConductCode:["GET /codes_of_conduct/{key}",{mediaType:{previews:["scarlet-witch"]}}],getForRepo:["GET /repos/{owner}/{repo}/community/code_of_conduct",{mediaType:{previews:["scarlet-witch"]}}]},emojis:{get:["GET /emojis"]},enterpriseAdmin:{disableSelectedOrganizationGithubActionsEnterprise:["DELETE /enterprises/{enterprise}/actions/permissions/organizations/{org_id}"],enableSelectedOrganizationGithubActionsEnterprise:["PUT /enterprises/{enterprise}/actions/permissions/organizations/{org_id}"],getAllowedActionsEnterprise:["GET /enterprises/{enterprise}/actions/permissions/selected-actions"],getGithubActionsPermissionsEnterprise:["GET /enterprises/{enterprise}/actions/permissions"],listSelectedOrganizationsEnabledGithubActionsEnterprise:["GET /enterprises/{enterprise}/actions/permissions/organizations"],setAllowedActionsEnterprise:["PUT /enterprises/{enterprise}/actions/permissions/selected-actions"],setGithubActionsPermissionsEnterprise:["PUT /enterprises/{enterprise}/actions/permissions"],setSelectedOrganizationsEnabledGithubActionsEnterprise:["PUT /enterprises/{enterprise}/actions/permissions/organizations"]},gists:{checkIsStarred:["GET /gists/{gist_id}/star"],create:["POST /gists"],createComment:["POST /gists/{gist_id}/comments"],delete:["DELETE /gists/{gist_id}"],deleteComment:["DELETE /gists/{gist_id}/comments/{comment_id}"],fork:["POST /gists/{gist_id}/forks"],get:["GET /gists/{gist_id}"],getComment:["GET /gists/{gist_id}/comments/{comment_id}"],getRevision:["GET /gists/{gist_id}/{sha}"],list:["GET /gists"],listComments:["GET /gists/{gist_id}/comments"],listCommits:["GET /gists/{gist_id}/commits"],listForUser:["GET /users/{username}/gists"],listForks:["GET /gists/{gist_id}/forks"],listPublic:["GET /gists/public"],listStarred:["GET /gists/starred"],star:["PUT /gists/{gist_id}/star"],unstar:["DELETE /gists/{gist_id}/star"],update:["PATCH /gists/{gist_id}"],updateComment:["PATCH /gists/{gist_id}/comments/{comment_id}"]},git:{createBlob:["POST /repos/{owner}/{repo}/git/blobs"],createCommit:["POST /repos/{owner}/{repo}/git/commits"],createRef:["POST /repos/{owner}/{repo}/git/refs"],createTag:["POST /repos/{owner}/{repo}/git/tags"],createTree:["POST /repos/{owner}/{repo}/git/trees"],deleteRef:["DELETE /repos/{owner}/{repo}/git/refs/{ref}"],getBlob:["GET /repos/{owner}/{repo}/git/blobs/{file_sha}"],getCommit:["GET /repos/{owner}/{repo}/git/commits/{commit_sha}"],getRef:["GET /repos/{owner}/{repo}/git/ref/{ref}"],getTag:["GET /repos/{owner}/{repo}/git/tags/{tag_sha}"],getTree:["GET /repos/{owner}/{repo}/git/trees/{tree_sha}"],listMatchingRefs:["GET /repos/{owner}/{repo}/git/matching-refs/{ref}"],updateRef:["PATCH /repos/{owner}/{repo}/git/refs/{ref}"]},gitignore:{getAllTemplates:["GET /gitignore/templates"],getTemplate:["GET /gitignore/templates/{name}"]},interactions:{getRestrictionsForOrg:["GET /orgs/{org}/interaction-limits"],getRestrictionsForRepo:["GET /repos/{owner}/{repo}/interaction-limits"],getRestrictionsForYourPublicRepos:["GET /user/interaction-limits"],removeRestrictionsForOrg:["DELETE /orgs/{org}/interaction-limits"],removeRestrictionsForRepo:["DELETE /repos/{owner}/{repo}/interaction-limits"],removeRestrictionsForYourPublicRepos:["DELETE /user/interaction-limits"],setRestrictionsForOrg:["PUT /orgs/{org}/interaction-limits"],setRestrictionsForRepo:["PUT /repos/{owner}/{repo}/interaction-limits"],setRestrictionsForYourPublicRepos:["PUT /user/interaction-limits"]},issues:{addAssignees:["POST /repos/{owner}/{repo}/issues/{issue_number}/assignees"],addLabels:["POST /repos/{owner}/{repo}/issues/{issue_number}/labels"],checkUserCanBeAssigned:["GET /repos/{owner}/{repo}/assignees/{assignee}"],create:["POST /repos/{owner}/{repo}/issues"],createComment:["POST /repos/{owner}/{repo}/issues/{issue_number}/comments"],createLabel:["POST /repos/{owner}/{repo}/labels"],createMilestone:["POST /repos/{owner}/{repo}/milestones"],deleteComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}"],deleteLabel:["DELETE /repos/{owner}/{repo}/labels/{name}"],deleteMilestone:["DELETE /repos/{owner}/{repo}/milestones/{milestone_number}"],get:["GET /repos/{owner}/{repo}/issues/{issue_number}"],getComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}"],getEvent:["GET /repos/{owner}/{repo}/issues/events/{event_id}"],getLabel:["GET /repos/{owner}/{repo}/labels/{name}"],getMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}"],list:["GET /issues"],listAssignees:["GET /repos/{owner}/{repo}/assignees"],listComments:["GET /repos/{owner}/{repo}/issues/{issue_number}/comments"],listCommentsForRepo:["GET /repos/{owner}/{repo}/issues/comments"],listEvents:["GET /repos/{owner}/{repo}/issues/{issue_number}/events"],listEventsForRepo:["GET /repos/{owner}/{repo}/issues/events"],listEventsForTimeline:["GET /repos/{owner}/{repo}/issues/{issue_number}/timeline",{mediaType:{previews:["mockingbird"]}}],listForAuthenticatedUser:["GET /user/issues"],listForOrg:["GET /orgs/{org}/issues"],listForRepo:["GET /repos/{owner}/{repo}/issues"],listLabelsForMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels"],listLabelsForRepo:["GET /repos/{owner}/{repo}/labels"],listLabelsOnIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/labels"],listMilestones:["GET /repos/{owner}/{repo}/milestones"],lock:["PUT /repos/{owner}/{repo}/issues/{issue_number}/lock"],removeAllLabels:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels"],removeAssignees:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/assignees"],removeLabel:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}"],setLabels:["PUT /repos/{owner}/{repo}/issues/{issue_number}/labels"],unlock:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/lock"],update:["PATCH /repos/{owner}/{repo}/issues/{issue_number}"],updateComment:["PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}"],updateLabel:["PATCH /repos/{owner}/{repo}/labels/{name}"],updateMilestone:["PATCH /repos/{owner}/{repo}/milestones/{milestone_number}"]},licenses:{get:["GET /licenses/{license}"],getAllCommonlyUsed:["GET /licenses"],getForRepo:["GET /repos/{owner}/{repo}/license"]},markdown:{render:["POST /markdown"],renderRaw:["POST /markdown/raw",{headers:{"content-type":"text/plain; charset=utf-8"}}]},meta:{get:["GET /meta"],getOctocat:["GET /octocat"],getZen:["GET /zen"],root:["GET /"]},migrations:{cancelImport:["DELETE /repos/{owner}/{repo}/import"],deleteArchiveForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/archive",{mediaType:{previews:["wyandotte"]}}],deleteArchiveForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/archive",{mediaType:{previews:["wyandotte"]}}],downloadArchiveForOrg:["GET /orgs/{org}/migrations/{migration_id}/archive",{mediaType:{previews:["wyandotte"]}}],getArchiveForAuthenticatedUser:["GET /user/migrations/{migration_id}/archive",{mediaType:{previews:["wyandotte"]}}],getCommitAuthors:["GET /repos/{owner}/{repo}/import/authors"],getImportStatus:["GET /repos/{owner}/{repo}/import"],getLargeFiles:["GET /repos/{owner}/{repo}/import/large_files"],getStatusForAuthenticatedUser:["GET /user/migrations/{migration_id}",{mediaType:{previews:["wyandotte"]}}],getStatusForOrg:["GET /orgs/{org}/migrations/{migration_id}",{mediaType:{previews:["wyandotte"]}}],listForAuthenticatedUser:["GET /user/migrations",{mediaType:{previews:["wyandotte"]}}],listForOrg:["GET /orgs/{org}/migrations",{mediaType:{previews:["wyandotte"]}}],listReposForOrg:["GET /orgs/{org}/migrations/{migration_id}/repositories",{mediaType:{previews:["wyandotte"]}}],listReposForUser:["GET /user/migrations/{migration_id}/repositories",{mediaType:{previews:["wyandotte"]}}],mapCommitAuthor:["PATCH /repos/{owner}/{repo}/import/authors/{author_id}"],setLfsPreference:["PATCH /repos/{owner}/{repo}/import/lfs"],startForAuthenticatedUser:["POST /user/migrations"],startForOrg:["POST /orgs/{org}/migrations"],startImport:["PUT /repos/{owner}/{repo}/import"],unlockRepoForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/repos/{repo_name}/lock",{mediaType:{previews:["wyandotte"]}}],unlockRepoForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock",{mediaType:{previews:["wyandotte"]}}],updateImport:["PATCH /repos/{owner}/{repo}/import"]},orgs:{blockUser:["PUT /orgs/{org}/blocks/{username}"],checkBlockedUser:["GET /orgs/{org}/blocks/{username}"],checkMembershipForUser:["GET /orgs/{org}/members/{username}"],checkPublicMembershipForUser:["GET /orgs/{org}/public_members/{username}"],convertMemberToOutsideCollaborator:["PUT /orgs/{org}/outside_collaborators/{username}"],createInvitation:["POST /orgs/{org}/invitations"],createWebhook:["POST /orgs/{org}/hooks"],deleteWebhook:["DELETE /orgs/{org}/hooks/{hook_id}"],get:["GET /orgs/{org}"],getMembershipForAuthenticatedUser:["GET /user/memberships/orgs/{org}"],getMembershipForUser:["GET /orgs/{org}/memberships/{username}"],getWebhook:["GET /orgs/{org}/hooks/{hook_id}"],getWebhookConfigForOrg:["GET /orgs/{org}/hooks/{hook_id}/config"],list:["GET /organizations"],listAppInstallations:["GET /orgs/{org}/installations"],listBlockedUsers:["GET /orgs/{org}/blocks"],listForAuthenticatedUser:["GET /user/orgs"],listForUser:["GET /users/{username}/orgs"],listInvitationTeams:["GET /orgs/{org}/invitations/{invitation_id}/teams"],listMembers:["GET /orgs/{org}/members"],listMembershipsForAuthenticatedUser:["GET /user/memberships/orgs"],listOutsideCollaborators:["GET /orgs/{org}/outside_collaborators"],listPendingInvitations:["GET /orgs/{org}/invitations"],listPublicMembers:["GET /orgs/{org}/public_members"],listWebhooks:["GET /orgs/{org}/hooks"],pingWebhook:["POST /orgs/{org}/hooks/{hook_id}/pings"],removeMember:["DELETE /orgs/{org}/members/{username}"],removeMembershipForUser:["DELETE /orgs/{org}/memberships/{username}"],removeOutsideCollaborator:["DELETE /orgs/{org}/outside_collaborators/{username}"],removePublicMembershipForAuthenticatedUser:["DELETE /orgs/{org}/public_members/{username}"],setMembershipForUser:["PUT /orgs/{org}/memberships/{username}"],setPublicMembershipForAuthenticatedUser:["PUT /orgs/{org}/public_members/{username}"],unblockUser:["DELETE /orgs/{org}/blocks/{username}"],update:["PATCH /orgs/{org}"],updateMembershipForAuthenticatedUser:["PATCH /user/memberships/orgs/{org}"],updateWebhook:["PATCH /orgs/{org}/hooks/{hook_id}"],updateWebhookConfigForOrg:["PATCH /orgs/{org}/hooks/{hook_id}/config"]},projects:{addCollaborator:["PUT /projects/{project_id}/collaborators/{username}",{mediaType:{previews:["inertia"]}}],createCard:["POST /projects/columns/{column_id}/cards",{mediaType:{previews:["inertia"]}}],createColumn:["POST /projects/{project_id}/columns",{mediaType:{previews:["inertia"]}}],createForAuthenticatedUser:["POST /user/projects",{mediaType:{previews:["inertia"]}}],createForOrg:["POST /orgs/{org}/projects",{mediaType:{previews:["inertia"]}}],createForRepo:["POST /repos/{owner}/{repo}/projects",{mediaType:{previews:["inertia"]}}],delete:["DELETE /projects/{project_id}",{mediaType:{previews:["inertia"]}}],deleteCard:["DELETE /projects/columns/cards/{card_id}",{mediaType:{previews:["inertia"]}}],deleteColumn:["DELETE /projects/columns/{column_id}",{mediaType:{previews:["inertia"]}}],get:["GET /projects/{project_id}",{mediaType:{previews:["inertia"]}}],getCard:["GET /projects/columns/cards/{card_id}",{mediaType:{previews:["inertia"]}}],getColumn:["GET /projects/columns/{column_id}",{mediaType:{previews:["inertia"]}}],getPermissionForUser:["GET /projects/{project_id}/collaborators/{username}/permission",{mediaType:{previews:["inertia"]}}],listCards:["GET /projects/columns/{column_id}/cards",{mediaType:{previews:["inertia"]}}],listCollaborators:["GET /projects/{project_id}/collaborators",{mediaType:{previews:["inertia"]}}],listColumns:["GET /projects/{project_id}/columns",{mediaType:{previews:["inertia"]}}],listForOrg:["GET /orgs/{org}/projects",{mediaType:{previews:["inertia"]}}],listForRepo:["GET /repos/{owner}/{repo}/projects",{mediaType:{previews:["inertia"]}}],listForUser:["GET /users/{username}/projects",{mediaType:{previews:["inertia"]}}],moveCard:["POST /projects/columns/cards/{card_id}/moves",{mediaType:{previews:["inertia"]}}],moveColumn:["POST /projects/columns/{column_id}/moves",{mediaType:{previews:["inertia"]}}],removeCollaborator:["DELETE /projects/{project_id}/collaborators/{username}",{mediaType:{previews:["inertia"]}}],update:["PATCH /projects/{project_id}",{mediaType:{previews:["inertia"]}}],updateCard:["PATCH /projects/columns/cards/{card_id}",{mediaType:{previews:["inertia"]}}],updateColumn:["PATCH /projects/columns/{column_id}",{mediaType:{previews:["inertia"]}}]},pulls:{checkIfMerged:["GET /repos/{owner}/{repo}/pulls/{pull_number}/merge"],create:["POST /repos/{owner}/{repo}/pulls"],createReplyForReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies"],createReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],createReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments"],deletePendingReview:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],deleteReviewComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}"],dismissReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals"],get:["GET /repos/{owner}/{repo}/pulls/{pull_number}"],getReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],getReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}"],list:["GET /repos/{owner}/{repo}/pulls"],listCommentsForReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments"],listCommits:["GET /repos/{owner}/{repo}/pulls/{pull_number}/commits"],listFiles:["GET /repos/{owner}/{repo}/pulls/{pull_number}/files"],listRequestedReviewers:["GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],listReviewComments:["GET /repos/{owner}/{repo}/pulls/{pull_number}/comments"],listReviewCommentsForRepo:["GET /repos/{owner}/{repo}/pulls/comments"],listReviews:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],merge:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge"],removeRequestedReviewers:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],requestReviewers:["POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],submitReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events"],update:["PATCH /repos/{owner}/{repo}/pulls/{pull_number}"],updateBranch:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branch",{mediaType:{previews:["lydian"]}}],updateReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],updateReviewComment:["PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}"]},rateLimit:{get:["GET /rate_limit"]},reactions:{createForCommitComment:["POST /repos/{owner}/{repo}/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForIssue:["POST /repos/{owner}/{repo}/issues/{issue_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForIssueComment:["POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForPullRequestReviewComment:["POST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForTeamDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForTeamDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],deleteForCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForIssue:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForIssueComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForPullRequestComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForTeamDiscussion:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForTeamDiscussionComment:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteLegacy:["DELETE /reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}},{deprecated:"octokit.reactions.deleteLegacy() is deprecated, see https://docs.github.com/v3/reactions/#delete-a-reaction-legacy"}],listForCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForIssueComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForPullRequestReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForTeamDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForTeamDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}]},repos:{acceptInvitation:["PATCH /user/repository_invitations/{invitation_id}"],addAppAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],addCollaborator:["PUT /repos/{owner}/{repo}/collaborators/{username}"],addStatusCheckContexts:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],addTeamAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],addUserAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],checkCollaborator:["GET /repos/{owner}/{repo}/collaborators/{username}"],checkVulnerabilityAlerts:["GET /repos/{owner}/{repo}/vulnerability-alerts",{mediaType:{previews:["dorian"]}}],compareCommits:["GET /repos/{owner}/{repo}/compare/{base}...{head}"],createCommitComment:["POST /repos/{owner}/{repo}/commits/{commit_sha}/comments"],createCommitSignatureProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",{mediaType:{previews:["zzzax"]}}],createCommitStatus:["POST /repos/{owner}/{repo}/statuses/{sha}"],createDeployKey:["POST /repos/{owner}/{repo}/keys"],createDeployment:["POST /repos/{owner}/{repo}/deployments"],createDeploymentStatus:["POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],createDispatchEvent:["POST /repos/{owner}/{repo}/dispatches"],createForAuthenticatedUser:["POST /user/repos"],createFork:["POST /repos/{owner}/{repo}/forks"],createInOrg:["POST /orgs/{org}/repos"],createOrUpdateFileContents:["PUT /repos/{owner}/{repo}/contents/{path}"],createPagesSite:["POST /repos/{owner}/{repo}/pages",{mediaType:{previews:["switcheroo"]}}],createRelease:["POST /repos/{owner}/{repo}/releases"],createUsingTemplate:["POST /repos/{template_owner}/{template_repo}/generate",{mediaType:{previews:["baptiste"]}}],createWebhook:["POST /repos/{owner}/{repo}/hooks"],declineInvitation:["DELETE /user/repository_invitations/{invitation_id}"],delete:["DELETE /repos/{owner}/{repo}"],deleteAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],deleteAdminBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],deleteBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection"],deleteCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}"],deleteCommitSignatureProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",{mediaType:{previews:["zzzax"]}}],deleteDeployKey:["DELETE /repos/{owner}/{repo}/keys/{key_id}"],deleteDeployment:["DELETE /repos/{owner}/{repo}/deployments/{deployment_id}"],deleteFile:["DELETE /repos/{owner}/{repo}/contents/{path}"],deleteInvitation:["DELETE /repos/{owner}/{repo}/invitations/{invitation_id}"],deletePagesSite:["DELETE /repos/{owner}/{repo}/pages",{mediaType:{previews:["switcheroo"]}}],deletePullRequestReviewProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],deleteRelease:["DELETE /repos/{owner}/{repo}/releases/{release_id}"],deleteReleaseAsset:["DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}"],deleteWebhook:["DELETE /repos/{owner}/{repo}/hooks/{hook_id}"],disableAutomatedSecurityFixes:["DELETE /repos/{owner}/{repo}/automated-security-fixes",{mediaType:{previews:["london"]}}],disableVulnerabilityAlerts:["DELETE /repos/{owner}/{repo}/vulnerability-alerts",{mediaType:{previews:["dorian"]}}],downloadArchive:["GET /repos/{owner}/{repo}/zipball/{ref}",{},{renamed:["repos","downloadZipballArchive"]}],downloadTarballArchive:["GET /repos/{owner}/{repo}/tarball/{ref}"],downloadZipballArchive:["GET /repos/{owner}/{repo}/zipball/{ref}"],enableAutomatedSecurityFixes:["PUT /repos/{owner}/{repo}/automated-security-fixes",{mediaType:{previews:["london"]}}],enableVulnerabilityAlerts:["PUT /repos/{owner}/{repo}/vulnerability-alerts",{mediaType:{previews:["dorian"]}}],get:["GET /repos/{owner}/{repo}"],getAccessRestrictions:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],getAdminBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],getAllStatusCheckContexts:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts"],getAllTopics:["GET /repos/{owner}/{repo}/topics",{mediaType:{previews:["mercy"]}}],getAppsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps"],getBranch:["GET /repos/{owner}/{repo}/branches/{branch}"],getBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection"],getClones:["GET /repos/{owner}/{repo}/traffic/clones"],getCodeFrequencyStats:["GET /repos/{owner}/{repo}/stats/code_frequency"],getCollaboratorPermissionLevel:["GET /repos/{owner}/{repo}/collaborators/{username}/permission"],getCombinedStatusForRef:["GET /repos/{owner}/{repo}/commits/{ref}/status"],getCommit:["GET /repos/{owner}/{repo}/commits/{ref}"],getCommitActivityStats:["GET /repos/{owner}/{repo}/stats/commit_activity"],getCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}"],getCommitSignatureProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",{mediaType:{previews:["zzzax"]}}],getCommunityProfileMetrics:["GET /repos/{owner}/{repo}/community/profile"],getContent:["GET /repos/{owner}/{repo}/contents/{path}"],getContributorsStats:["GET /repos/{owner}/{repo}/stats/contributors"],getDeployKey:["GET /repos/{owner}/{repo}/keys/{key_id}"],getDeployment:["GET /repos/{owner}/{repo}/deployments/{deployment_id}"],getDeploymentStatus:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}"],getLatestPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/latest"],getLatestRelease:["GET /repos/{owner}/{repo}/releases/latest"],getPages:["GET /repos/{owner}/{repo}/pages"],getPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/{build_id}"],getParticipationStats:["GET /repos/{owner}/{repo}/stats/participation"],getPullRequestReviewProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],getPunchCardStats:["GET /repos/{owner}/{repo}/stats/punch_card"],getReadme:["GET /repos/{owner}/{repo}/readme"],getRelease:["GET /repos/{owner}/{repo}/releases/{release_id}"],getReleaseAsset:["GET /repos/{owner}/{repo}/releases/assets/{asset_id}"],getReleaseByTag:["GET /repos/{owner}/{repo}/releases/tags/{tag}"],getStatusChecksProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],getTeamsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams"],getTopPaths:["GET /repos/{owner}/{repo}/traffic/popular/paths"],getTopReferrers:["GET /repos/{owner}/{repo}/traffic/popular/referrers"],getUsersWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users"],getViews:["GET /repos/{owner}/{repo}/traffic/views"],getWebhook:["GET /repos/{owner}/{repo}/hooks/{hook_id}"],getWebhookConfigForRepo:["GET /repos/{owner}/{repo}/hooks/{hook_id}/config"],listBranches:["GET /repos/{owner}/{repo}/branches"],listBranchesForHeadCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head",{mediaType:{previews:["groot"]}}],listCollaborators:["GET /repos/{owner}/{repo}/collaborators"],listCommentsForCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/comments"],listCommitCommentsForRepo:["GET /repos/{owner}/{repo}/comments"],listCommitStatusesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/statuses"],listCommits:["GET /repos/{owner}/{repo}/commits"],listContributors:["GET /repos/{owner}/{repo}/contributors"],listDeployKeys:["GET /repos/{owner}/{repo}/keys"],listDeploymentStatuses:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],listDeployments:["GET /repos/{owner}/{repo}/deployments"],listForAuthenticatedUser:["GET /user/repos"],listForOrg:["GET /orgs/{org}/repos"],listForUser:["GET /users/{username}/repos"],listForks:["GET /repos/{owner}/{repo}/forks"],listInvitations:["GET /repos/{owner}/{repo}/invitations"],listInvitationsForAuthenticatedUser:["GET /user/repository_invitations"],listLanguages:["GET /repos/{owner}/{repo}/languages"],listPagesBuilds:["GET /repos/{owner}/{repo}/pages/builds"],listPublic:["GET /repositories"],listPullRequestsAssociatedWithCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls",{mediaType:{previews:["groot"]}}],listReleaseAssets:["GET /repos/{owner}/{repo}/releases/{release_id}/assets"],listReleases:["GET /repos/{owner}/{repo}/releases"],listTags:["GET /repos/{owner}/{repo}/tags"],listTeams:["GET /repos/{owner}/{repo}/teams"],listWebhooks:["GET /repos/{owner}/{repo}/hooks"],merge:["POST /repos/{owner}/{repo}/merges"],pingWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/pings"],removeAppAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],removeCollaborator:["DELETE /repos/{owner}/{repo}/collaborators/{username}"],removeStatusCheckContexts:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],removeStatusCheckProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],removeTeamAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],removeUserAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],replaceAllTopics:["PUT /repos/{owner}/{repo}/topics",{mediaType:{previews:["mercy"]}}],requestPagesBuild:["POST /repos/{owner}/{repo}/pages/builds"],setAdminBranchProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],setAppAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],setStatusCheckContexts:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],setTeamAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],setUserAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],testPushWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/tests"],transfer:["POST /repos/{owner}/{repo}/transfer"],update:["PATCH /repos/{owner}/{repo}"],updateBranchProtection:["PUT /repos/{owner}/{repo}/branches/{branch}/protection"],updateCommitComment:["PATCH /repos/{owner}/{repo}/comments/{comment_id}"],updateInformationAboutPagesSite:["PUT /repos/{owner}/{repo}/pages"],updateInvitation:["PATCH /repos/{owner}/{repo}/invitations/{invitation_id}"],updatePullRequestReviewProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],updateRelease:["PATCH /repos/{owner}/{repo}/releases/{release_id}"],updateReleaseAsset:["PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}"],updateStatusCheckPotection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",{},{renamed:["repos","updateStatusCheckProtection"]}],updateStatusCheckProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],updateWebhook:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}"],updateWebhookConfigForRepo:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}/config"],uploadReleaseAsset:["POST /repos/{owner}/{repo}/releases/{release_id}/assets{?name,label}",{baseUrl:"https://uploads.github.com"}]},search:{code:["GET /search/code"],commits:["GET /search/commits",{mediaType:{previews:["cloak"]}}],issuesAndPullRequests:["GET /search/issues"],labels:["GET /search/labels"],repos:["GET /search/repositories"],topics:["GET /search/topics",{mediaType:{previews:["mercy"]}}],users:["GET /search/users"]},secretScanning:{getAlert:["GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"],listAlertsForRepo:["GET /repos/{owner}/{repo}/secret-scanning/alerts"],updateAlert:["PATCH /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"]},teams:{addOrUpdateMembershipForUserInOrg:["PUT /orgs/{org}/teams/{team_slug}/memberships/{username}"],addOrUpdateProjectPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/projects/{project_id}",{mediaType:{previews:["inertia"]}}],addOrUpdateRepoPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],checkPermissionsForProjectInOrg:["GET /orgs/{org}/teams/{team_slug}/projects/{project_id}",{mediaType:{previews:["inertia"]}}],checkPermissionsForRepoInOrg:["GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],create:["POST /orgs/{org}/teams"],createDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],createDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions"],deleteDiscussionCommentInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],deleteDiscussionInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],deleteInOrg:["DELETE /orgs/{org}/teams/{team_slug}"],getByName:["GET /orgs/{org}/teams/{team_slug}"],getDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],getDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],getMembershipForUserInOrg:["GET /orgs/{org}/teams/{team_slug}/memberships/{username}"],list:["GET /orgs/{org}/teams"],listChildInOrg:["GET /orgs/{org}/teams/{team_slug}/teams"],listDiscussionCommentsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],listDiscussionsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions"],listForAuthenticatedUser:["GET /user/teams"],listMembersInOrg:["GET /orgs/{org}/teams/{team_slug}/members"],listPendingInvitationsInOrg:["GET /orgs/{org}/teams/{team_slug}/invitations"],listProjectsInOrg:["GET /orgs/{org}/teams/{team_slug}/projects",{mediaType:{previews:["inertia"]}}],listReposInOrg:["GET /orgs/{org}/teams/{team_slug}/repos"],removeMembershipForUserInOrg:["DELETE /orgs/{org}/teams/{team_slug}/memberships/{username}"],removeProjectInOrg:["DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}"],removeRepoInOrg:["DELETE /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],updateDiscussionCommentInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],updateDiscussionInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],updateInOrg:["PATCH /orgs/{org}/teams/{team_slug}"]},users:{addEmailForAuthenticated:["POST /user/emails"],block:["PUT /user/blocks/{username}"],checkBlocked:["GET /user/blocks/{username}"],checkFollowingForUser:["GET /users/{username}/following/{target_user}"],checkPersonIsFollowedByAuthenticated:["GET /user/following/{username}"],createGpgKeyForAuthenticated:["POST /user/gpg_keys"],createPublicSshKeyForAuthenticated:["POST /user/keys"],deleteEmailForAuthenticated:["DELETE /user/emails"],deleteGpgKeyForAuthenticated:["DELETE /user/gpg_keys/{gpg_key_id}"],deletePublicSshKeyForAuthenticated:["DELETE /user/keys/{key_id}"],follow:["PUT /user/following/{username}"],getAuthenticated:["GET /user"],getByUsername:["GET /users/{username}"],getContextForUser:["GET /users/{username}/hovercard"],getGpgKeyForAuthenticated:["GET /user/gpg_keys/{gpg_key_id}"],getPublicSshKeyForAuthenticated:["GET /user/keys/{key_id}"],list:["GET /users"],listBlockedByAuthenticated:["GET /user/blocks"],listEmailsForAuthenticated:["GET /user/emails"],listFollowedByAuthenticated:["GET /user/following"],listFollowersForAuthenticatedUser:["GET /user/followers"],listFollowersForUser:["GET /users/{username}/followers"],listFollowingForUser:["GET /users/{username}/following"],listGpgKeysForAuthenticated:["GET /user/gpg_keys"],listGpgKeysForUser:["GET /users/{username}/gpg_keys"],listPublicEmailsForAuthenticated:["GET /user/public_emails"],listPublicKeysForUser:["GET /users/{username}/keys"],listPublicSshKeysForAuthenticated:["GET /user/keys"],setPrimaryEmailVisibilityForAuthenticated:["PATCH /user/email/visibility"],unblock:["DELETE /user/blocks/{username}"],unfollow:["DELETE /user/following/{username}"],updateAuthenticated:["PATCH /user"]}};function decorate(octokit,scope,methodName,defaults,decorations){const requestWithDefaults=octokit.request.defaults(defaults);return Object.assign((function withDecorations(...args){let options=requestWithDefaults.endpoint.merge(...args);if(decorations.mapToData)return options=Object.assign({},options,{data:options[decorations.mapToData],[decorations.mapToData]:void 0}),requestWithDefaults(options);if(decorations.renamed){const[newScope,newMethodName]=decorations.renamed;octokit.log.warn(`octokit.${scope}.${methodName}() has been renamed to octokit.${newScope}.${newMethodName}()`)}if(decorations.deprecated&&octokit.log.warn(decorations.deprecated),decorations.renamedParameters){const options=requestWithDefaults.endpoint.merge(...args);for(const[name,alias]of Object.entries(decorations.renamedParameters))name in options&&(octokit.log.warn(`"${name}" parameter is deprecated for "octokit.${scope}.${methodName}()". Use "${alias}" instead`),alias in options||(options[alias]=options[name]),delete options[name]);return requestWithDefaults(options)}return requestWithDefaults(...args)}),requestWithDefaults)}function restEndpointMethods(octokit){return function endpointsToMethods(octokit,endpointsMap){const newMethods={};for(const[scope,endpoints]of Object.entries(endpointsMap))for(const[methodName,endpoint]of Object.entries(endpoints)){const[route,defaults,decorations]=endpoint,[method,url]=route.split(/ /),endpointDefaults=Object.assign({method,url},defaults);newMethods[scope]||(newMethods[scope]={});const scopeMethods=newMethods[scope];scopeMethods[methodName]=decorations?decorate(octokit,scope,methodName,endpointDefaults,decorations):octokit.request.defaults(endpointDefaults)}return newMethods}(octokit,Endpoints)}restEndpointMethods.VERSION="4.4.1"},566:(module,__unused_webpack_exports,__webpack_require__)=>{var register=__webpack_require__(698),addHook=__webpack_require__(505),removeHook=__webpack_require__(417),bind=Function.bind,bindable=bind.bind(bind);function bindApi(hook,state,name){var removeHookRef=bindable(removeHook,null).apply(null,name?[state,name]:[state]);hook.api={remove:removeHookRef},hook.remove=removeHookRef,["before","error","after","wrap"].forEach((function(kind){var args=name?[state,kind,name]:[state,kind];hook[kind]=hook.api[kind]=bindable(addHook,null).apply(null,args)}))}function HookCollection(){var state={registry:{}},hook=register.bind(null,state);return bindApi(hook,state),hook}var collectionHookDeprecationMessageDisplayed=!1;function Hook(){return collectionHookDeprecationMessageDisplayed||(console.warn('[before-after-hook]: "Hook()" repurposing warning, use "Hook.Collection()". Read more: https://git.io/upgrade-before-after-hook-to-1.4'),collectionHookDeprecationMessageDisplayed=!0),HookCollection()}Hook.Singular=function HookSingular(){var singularHookState={registry:{}},singularHook=register.bind(null,singularHookState,"h");return bindApi(singularHook,singularHookState,"h"),singularHook}.bind(),Hook.Collection=HookCollection.bind(),module.exports=Hook,module.exports.Hook=Hook,module.exports.Singular=Hook.Singular,module.exports.Collection=Hook.Collection},505:module=>{module.exports=function addHook(state,kind,name,hook){var orig=hook;state.registry[name]||(state.registry[name]=[]);"before"===kind&&(hook=function(method,options){return Promise.resolve().then(orig.bind(null,options)).then(method.bind(null,options))});"after"===kind&&(hook=function(method,options){var result;return Promise.resolve().then(method.bind(null,options)).then((function(result_){return orig(result=result_,options)})).then((function(){return result}))});"error"===kind&&(hook=function(method,options){return Promise.resolve().then(method.bind(null,options)).catch((function(error){return orig(error,options)}))});state.registry[name].push({hook,orig})}},698:module=>{module.exports=function register(state,name,method,options){if("function"!=typeof method)throw new Error("method for before hook must be a function");options||(options={});if(Array.isArray(name))return name.reverse().reduce((function(callback,name){return register.bind(null,state,name,callback,options)}),method)();return Promise.resolve().then((function(){return state.registry[name]?state.registry[name].reduce((function(method,registered){return registered.hook.bind(null,method,options)}),method)():method(options)}))}},417:module=>{module.exports=function removeHook(state,name,method){if(!state.registry[name])return;var index=state.registry[name].map((function(registered){return registered.orig})).indexOf(method);if(-1===index)return;state.registry[name].splice(index,1)}},778:(module,__unused_webpack_exports,__webpack_require__)=>{var wrappy=__webpack_require__(479);function once(fn){var f=function(){return f.called?f.value:(f.called=!0,f.value=fn.apply(this,arguments))};return f.called=!1,f}function onceStrict(fn){var f=function(){if(f.called)throw new Error(f.onceError);return f.called=!0,f.value=fn.apply(this,arguments)},name=fn.name||"Function wrapped with `once`";return f.onceError=name+" shouldn't be called more than once",f.called=!1,f}module.exports=wrappy(once),module.exports.strict=wrappy(onceStrict),once.proto=once((function(){Object.defineProperty(Function.prototype,"once",{value:function(){return once(this)},configurable:!0}),Object.defineProperty(Function.prototype,"onceStrict",{value:function(){return onceStrict(this)},configurable:!0})}))},601:(__unused_webpack_module,exports)=>{"use strict";var Constants;Object.defineProperty(exports,"__esModule",{value:!0}),function(Constants){Constants.DEFAULT_IMG="quay.io/redhat-github-actions/runner",Constants.DEFAULT_IMG_TAG="v1.0.0",Constants.CHART_REPO_NAME="openshift-actions-runner-chart",Constants.CHART_NAME="actions-runner",Constants.CHART_REPO_URL="https://redhat-actions.github.io/openshift-actions-runner-chart/",Constants.RELEASE_NAME_LABEL="app.kubernetes.io/instance"}(Constants||(Constants={})),exports.default=Constants},169:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Outputs=exports.Inputs=void 0,function(Inputs){Inputs.GITHUB_PAT="github_pat",Inputs.HELM_CHART_VERSION="helm_chart_version",Inputs.HELM_EXTRA_ARGS="helm_extra_args",Inputs.HELM_RELEASE_NAME="helm_release_name",Inputs.HELM_UNINSTALL_EXISTING="helm_uninstall_existing",Inputs.NAMESPACE="namespace",Inputs.RUNNER_IMAGE="runner_image",Inputs.RUNNER_LABELS="runner_labels",Inputs.RUNNER_LOCATION="runner_location",Inputs.RUNNER_REPLICAS="runner_replicas",Inputs.RUNNER_TAG="runner_tag"}(exports.Inputs||(exports.Inputs={})),function(Outputs){Outputs.HELM_RELEASE_NAME="helm_release_name",Outputs.INSTALLED="installed",Outputs.RUNNERS="runners"}(exports.Outputs||(exports.Outputs={}))},47:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.waitForRunnersToBeOnline=exports.getMatchingOnlineRunners=void 0;const core=__webpack_require__(225),github=__webpack_require__(142),util_1=__webpack_require__(285);exports.getMatchingOnlineRunners=async function getMatchingOnlineRunners(githubPat,runnerLocation,requiredLabels){const selfHostedRunnersResponse=await listSelfHostedRunners(githubPat,runnerLocation),noRunners=selfHostedRunnersResponse.total_count;return core.info(`${runnerLocation.toString()} has ${noRunners} runner${1!==noRunners?"s":""}.`),0===selfHostedRunnersResponse.total_count?[]:(core.info(`Looking for runner with labels: ${util_1.joinList(requiredLabels.map((label=>`"${label}"`)))}`),selfHostedRunnersResponse.runners.filter((runner=>{const runnerLabels=runner.labels.map((label=>label.name));core.info(`${runner.name} has labels: ${runnerLabels.map((label=>`"${label}"`)).join(", ")}`);const matchingLabels=[],missingLabels=[];if(requiredLabels.forEach((label=>{runnerLabels.includes(label)?matchingLabels.push(label):missingLabels.push(label)})),0===missingLabels.length){const isOnline="online"===runner.status;return isOnline?core.info(`${runner.name} has the required labels and is online`):core.info(`${runner.name} has all the required labels, but status is ${runner.status}`),isOnline}const missingLabelsNoun=missingLabels.length>1?"labels":"label";return core.info(`${runner.name} is missing the ${missingLabelsNoun} ${util_1.joinList(missingLabels.map((l=>`"${l}"`)))}`),!1})))};async function listSelfHostedRunners(githubPat,runnerLocation){const octokit=await async function getOctokit(githubPat){if(cachedOctokit)return cachedOctokit;const octokit=github.getOctokit(githubPat);return cachedOctokit=octokit,octokit}(githubPat);let response;try{response=runnerLocation.repository?await octokit.actions.listSelfHostedRunnersForRepo({owner:runnerLocation.owner,repo:runnerLocation.repository}):await octokit.actions.listSelfHostedRunnersForOrg({org:runnerLocation.owner})}catch(err){throw function getBetterHttpError(err){const status=err.status;if(status&&err.message)return new Error(`Received status ${status}: ${err.message}`);return err}(err)}return core.debug(`Self-hosted runners response: ${JSON.stringify(response.data,void 0,2)}`),response.data}let cachedOctokit;exports.waitForRunnersToBeOnline=async function waitForRunnersToBeOnline(githubPat,runnerLocation,newRunnerNames){const noRunnerErrMsg=`Not all of the new runners were added to ${runnerLocation}, or were not online within 60s. Check if the pods failed to start, or exited.`;core.info(`⏳ Waiting for the new runners to come up: ${util_1.joinList(newRunnerNames,"and")}`);const newOnlineRunners=[],newOfflineRunners=[];return util_1.awaitWithRetry(60,5,"Waiting for runners to come online...",noRunnerErrMsg,(async resolve=>{const currentGHRunners=await listSelfHostedRunners(githubPat,runnerLocation);if(currentGHRunners.runners.length>0){const runnersWithStatus=currentGHRunners.runners.map((runner=>`${runner.name} (${runner.status})`));core.info(`${runnerLocation} runners are: ${util_1.joinList(runnersWithStatus)}`)}else core.info(`${runnerLocation} has no runners.`);const unresolvedRunners=newRunnerNames.filter((newRunner=>!newOnlineRunners.includes(newRunner)&&!newOfflineRunners.includes(newRunner)));0===unresolvedRunners.length?resolve(newOnlineRunners):core.info(`Still waiting for ${util_1.joinList(unresolvedRunners)}`),unresolvedRunners.forEach((newRunnerName=>{const newRunnerIndex=currentGHRunners.runners.map((runner=>runner.name)).findIndex((runnerName=>runnerName===newRunnerName));if(-1!==newRunnerIndex){const newRunner=currentGHRunners.runners[newRunnerIndex];"online"===newRunner.status?(core.info(`✅ ${newRunner.name} is online`),newOnlineRunners.push(newRunner.name)):newOfflineRunners.includes(newRunner.name)||(core.warning(`New runner ${newRunner.name} connected to GitHub but is ${newRunner.status}`),newOfflineRunners.push(newRunner.name))}}))}))}},334:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const core=__webpack_require__(225),io=__webpack_require__(484),exec_1=__webpack_require__(186),constants_1=__webpack_require__(601),wait_for_pods_1=__webpack_require__(290),util_1=__webpack_require__(285);var HelmValueNames;!function(HelmValueNames){HelmValueNames.RUNNER_IMAGE="runnerImage",HelmValueNames.RUNNER_TAG="runnerTag",HelmValueNames.RUNNER_LABELS="runnerLabels",HelmValueNames.RUNNER_REPLICAS="replicas",HelmValueNames.GITHUB_PAT="githubPat",HelmValueNames.GITHUB_OWNER="githubOwner",HelmValueNames.GITHUB_REPO="githubRepository"}(HelmValueNames||(HelmValueNames={})),exports.default=async function runHelmInstall(config){const helmPath=await io.which("helm",!0),namespaceArgs=config.namespace?["--namespace",config.namespace]:[];if(await exec_1.default(helmPath,["ls",...namespaceArgs]),config.helmUninstallIfExists){core.info(`🔎 Checking if release ${config.helmReleaseName} already exists...`);const releasesStr=await exec_1.default(helmPath,["ls","-q",...namespaceArgs]);util_1.splitByNewline(releasesStr.stdout).includes(config.helmReleaseName)?(core.info(`ℹ️ Release ${config.helmReleaseName} already exists; removing.`),await exec_1.default(helmPath,["uninstall",config.helmReleaseName,...namespaceArgs])):core.info(`Release ${config.helmReleaseName} does not exist.`)}else core.info("Not checking if release already exists");await exec_1.default(helmPath,["repo","add",constants_1.default.CHART_REPO_NAME,constants_1.default.CHART_REPO_URL]),await exec_1.default(helmPath,["repo","list"]),await exec_1.default(helmPath,["repo","update"]),await exec_1.default(helmPath,["search","repo",constants_1.default.CHART_NAME]),await exec_1.default(helmPath,["version"]);const versionArgs=config.helmChartVersion?["--version",config.helmChartVersion]:[],helmInstallCmd=["install",config.helmReleaseName,constants_1.default.CHART_REPO_NAME+"/"+constants_1.default.CHART_NAME,...namespaceArgs,...versionArgs,"--set-string",`${HelmValueNames.RUNNER_IMAGE}=${config.runnerImage}`,"--set-string",`${HelmValueNames.RUNNER_TAG}=${config.runnerTag}`,"--set-string",`${HelmValueNames.GITHUB_PAT}=${config.githubPat}`,"--set-string",`${HelmValueNames.GITHUB_OWNER}=${config.runnerLocation.owner}`,"--set",`${HelmValueNames.RUNNER_REPLICAS}=${config.runnerReplicas}`];if(config.runnerLocation.repository&&helmInstallCmd.push("--set-string",`${HelmValueNames.GITHUB_REPO}=${config.runnerLocation.repository}`),config.runnerLabels.length>0){const labelsStringified=`{ ${config.runnerLabels.join("\\,")} }`;helmInstallCmd.push("--set",`${HelmValueNames.RUNNER_LABELS}=${labelsStringified}`)}return config.helmExtraArgs.length>0&&helmInstallCmd.push(...config.helmExtraArgs),await exec_1.default(helmPath,helmInstallCmd),await exec_1.default(helmPath,["get","manifest",config.helmReleaseName,...namespaceArgs],{group:!0}),wait_for_pods_1.default(config.helmReleaseName,config.runnerReplicas,config.namespace)}},34:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.validateResourceName=void 0;const core=__webpack_require__(225),github=__webpack_require__(142),constants_1=__webpack_require__(601),inputs_outputs_1=__webpack_require__(169),runner_location_1=__webpack_require__(195),util_1=__webpack_require__(285);function validateResourceName(name){const nameWithReplacements=name.toLowerCase().replace(/[ _/.]/g,"-");if(!nameWithReplacements.match(/^[a-z0-9-]+$/))throw new Error(`Helm release name "${name}" contains illegal characters. Can only container lowercase letters, numbers, and '-'.`);if(!nameWithReplacements.match(/^[a-z]/)||!nameWithReplacements.match(/[a-z]$/))throw new Error(`Helm release name "${name}" must start and end with a lowercase letter.`);if(nameWithReplacements.length>63)throw new Error(`Helm release name "${name}" must be shorter than 64 characters.`);return nameWithReplacements}exports.default=function processInputs(){const githubPat=core.getInput(inputs_outputs_1.Inputs.GITHUB_PAT,{required:!0}),encodedPat=Buffer.from(githubPat).toString("base64");core.setSecret(encodedPat);const runnerLocInput=core.getInput(inputs_outputs_1.Inputs.RUNNER_LOCATION);core.debug(`Runner location input is ${runnerLocInput}`);const runnerLocation=function getRunnerLocationObj(runnerLocationStr){const slashIndex=runnerLocationStr.indexOf("/");if(slashIndex>=0)return new runner_location_1.default(runnerLocationStr.substring(0,slashIndex),runnerLocationStr.substring(slashIndex+1));return new runner_location_1.default(runnerLocationStr)}(runnerLocInput||`${github.context.repo.owner}/${github.context.repo.repo}`),helmReleaseNameInput=core.getInput(inputs_outputs_1.Inputs.HELM_RELEASE_NAME);let helmReleaseName;helmReleaseName=helmReleaseNameInput||(runnerLocation.repository?runnerLocation.repository+"-runner":runnerLocation.owner+"-runner"),helmReleaseName=validateResourceName(helmReleaseName);const runnerImage=core.getInput(inputs_outputs_1.Inputs.RUNNER_IMAGE)||constants_1.default.DEFAULT_IMG,runnerTag=core.getInput(inputs_outputs_1.Inputs.RUNNER_TAG)||constants_1.default.DEFAULT_IMG_TAG,inputLabelsStr=core.getInput(inputs_outputs_1.Inputs.RUNNER_LABELS);let runnerLabels=[];inputLabelsStr&&(runnerLabels=inputLabelsStr.split(",").map((label=>label.trim())));const inputExtraArgsStr=core.getInput(inputs_outputs_1.Inputs.HELM_EXTRA_ARGS);let helmExtraArgs=[];if(inputExtraArgsStr){helmExtraArgs=util_1.splitByNewline(inputExtraArgsStr).flatMap((line=>line.split(" "))).map((arg=>arg.trim()))}let helmChartVersion=core.getInput(inputs_outputs_1.Inputs.HELM_CHART_VERSION);""===helmChartVersion&&(helmChartVersion=void 0);const helmUninstallIfExists="true"===core.getInput(inputs_outputs_1.Inputs.HELM_UNINSTALL_EXISTING);let namespace=core.getInput(inputs_outputs_1.Inputs.NAMESPACE);return""===namespace&&(namespace=void 0),{githubPat,helmChartVersion,helmExtraArgs,helmReleaseName,helmUninstallIfExists,runnerImage,namespace,runnerLabels,runnerLocation,runnerReplicas:core.getInput(inputs_outputs_1.Inputs.RUNNER_REPLICAS)||"1",runnerTag}},exports.validateResourceName=validateResourceName},768:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.KubeCommandExecutor=exports.getKubeCommandExecutor=void 0;const io=__webpack_require__(484),exec_1=__webpack_require__(186);exports.getKubeCommandExecutor=async function getKubeCommandExecutor(labelSelector,namespace){const kubeClientPath=await async function getKubeClientPath(){const ocPath=await io.which("oc");if(ocPath)return ocPath;const kubectlPath=await io.which("kubectl");if(!kubectlPath)throw new Error("Neither kubectl nor oc was found. One of these tools must be installed, and added to the PATH.");return kubectlPath}();return new KubeCommandExecutor(kubeClientPath,labelSelector,namespace)};class KubeCommandExecutor{constructor(kubeClientPath,labelSelector,namespace){this.kubeClientPath=kubeClientPath,this.namespaceArg=namespace?["--namespace",namespace]:[],this.labelSelectorArg=labelSelector?["--selector",labelSelector]:[]}async logs(podName,containerName,group=!1){const containerNameArg=containerName?[containerName]:[];return(await exec_1.default(this.kubeClientPath,[...this.namespaceArg,"logs",podName,...containerNameArg],{group})).stdout}describe(resourceType,outputFormat,group=!1){return this.view("describe",resourceType,outputFormat,group)}async get(resourceType,outputFormat,group=!1){return this.view("get",resourceType,outputFormat,group)}async view(operation,resourceType,outputFormat,group=!1){const outputArg=outputFormat?["--output",outputFormat]:[];return(await exec_1.default(this.kubeClientPath,[...this.namespaceArg,operation,resourceType,...this.labelSelectorArg,...outputArg],{group})).stdout}}exports.KubeCommandExecutor=KubeCommandExecutor},195:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0});exports.default=class RunnerLocation{constructor(owner,repository){this.owner=owner,this.repository=repository}toString(){return this.repository?`${this.owner}/${this.repository}`:this.owner}}},186:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const core=__webpack_require__(225),exec=__webpack_require__(27),path=__webpack_require__(622);exports.default=async function execute(executable,args,execOptions={}){let stdout="",stderr="";const finalExecOptions={...execOptions};if(finalExecOptions.ignoreReturnCode=!0,finalExecOptions.listeners={stdout:data=>{stdout+=`${data.toString()}`},stderr:data=>{stderr+=`${data.toString()}`}},execOptions.group){const groupName=[executable,...args].join(" ");core.startGroup(groupName)}try{const exitCode=await exec.exec(executable,args,finalExecOptions);if(!0!==execOptions.ignoreReturnCode&&0!==exitCode){let error=`${path.basename(executable)} exited with code ${exitCode}`;throw stderr&&(error+=`\n${stderr}`),new Error(error)}return{exitCode,stdout:stdout.trim(),stderr:stderr.trim()}}finally{execOptions.group&&core.endGroup()}}},285:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.awaitWithRetry=exports.splitByNewline=exports.joinList=void 0;const core=__webpack_require__(225);exports.joinList=function joinList(strings_,andOrOr="and"){const strings=Array.from(strings_).filter((s=>!!s)),lastString=strings.splice(strings.length-1,1)[0];let joined=strings.join(", ");return joined=strings.length>0?`${joined} ${andOrOr} ${lastString}`:lastString,joined},exports.splitByNewline=function splitByNewline(s){return s.split(/\r?\n/)},exports.awaitWithRetry=function awaitWithRetry(timeoutS,delayS,groupName,errMsg,executor){let tries=0;const maxTries=timeoutS/delayS;let interval;return core.startGroup(groupName),new Promise(((resolve,reject)=>{interval=setInterval((async()=>{await executor(resolve,reject),tries>maxTries?reject(new Error(errMsg)):tries++}),1e3*delayS)})).finally((()=>{interval&&clearInterval(interval),core.endGroup()}))}},290:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const core=__webpack_require__(225),util_1=__webpack_require__(285),kube_executor_1=__webpack_require__(768),constants_1=__webpack_require__(601);exports.default=async function getAndWaitForPods(releaseName,desiredNoReplicas,namespace){const labelSelectorArg=`${constants_1.default.RELEASE_NAME_LABEL}=${releaseName}`,kubeExecutor=await kube_executor_1.getKubeCommandExecutor(labelSelectorArg,namespace),deploymentName=await kubeExecutor.get("deployments",'jsonpath={.items[*].metadata.name}{"\\n"}'),deploymentNotReadyMsg=`Deployment ${deploymentName} did not have ${desiredNoReplicas} available replicas after 60s.`;await util_1.awaitWithRetry(60,5,`Waiting for deployment ${deploymentName} to come up...`,deploymentNotReadyMsg,(async resolve=>{await kubeExecutor.get("all");await kubeExecutor.get("deployments",'jsonpath={.items[*].status.availableReplicas}{"\\n"}')===desiredNoReplicas&&(core.info(`${deploymentName} has ${desiredNoReplicas} replicas!`),resolve())})).catch((async err=>{core.warning(err),core.info("🐞 Running debug commands...");try{await kubeExecutor.describe("deployments",void 0,!0),await kubeExecutor.describe("replicasets",void 0,!0),await kubeExecutor.describe("pods",void 0,!0);const notReadyPods=util_1.splitByNewline(await kubeExecutor.get("pods",'jsonpath={range .items[*]}{"podName="}{.metadata.name}{" containerName="}{.status.containerStatuses[0].name}{" ready="}{.status.containerStatuses[0].ready}{"\\n"}{end}')).map((podStatus=>{const[podName,containerName,ready]=podStatus.split(" ").map((item=>item.substring(item.indexOf("=")+1,item.length)));return{podName,containerName,ready}})).filter((podStatusObj=>podStatusObj.ready));if(notReadyPods.length>0)for(const notReadyPod of notReadyPods)await kubeExecutor.logs(notReadyPod.podName,notReadyPod.containerName,!0);else core.info("The first container in all pods is Ready - not printing any container logs.")}catch(debugErr){core.info(`Failed to print debug info: ${debugErr}`)}throw err})),core.info(`Deployment ${deploymentName} has successfully come up`);const pods=(await kubeExecutor.get("pods",'jsonpath={.items[*].metadata.name}{"\\n"}')).split(" ");return await kubeExecutor.get("all"),pods}},149:(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__(468)},468:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";__webpack_require__(631);var debug,tls=__webpack_require__(16),http=__webpack_require__(605),https=__webpack_require__(211),events=__webpack_require__(614),util=(__webpack_require__(357),__webpack_require__(669));function TunnelingAgent(options){var self=this;self.options=options||{},self.proxyOptions=self.options.proxy||{},self.maxSockets=self.options.maxSockets||http.Agent.defaultMaxSockets,self.requests=[],self.sockets=[],self.on("free",(function onFree(socket,host,port,localAddress){for(var options=toOptions(host,port,localAddress),i=0,len=self.requests.length;i<len;++i){var pending=self.requests[i];if(pending.host===options.host&&pending.port===options.port)return self.requests.splice(i,1),void pending.request.onSocket(socket)}socket.destroy(),self.removeSocket(socket)}))}function createSecureSocket(options,cb){var self=this;TunnelingAgent.prototype.createSocket.call(self,options,(function(socket){var hostHeader=options.request.getHeader("host"),tlsOptions=mergeOptions({},self.options,{socket,servername:hostHeader?hostHeader.replace(/:.*$/,""):options.host}),secureSocket=tls.connect(0,tlsOptions);self.sockets[self.sockets.indexOf(socket)]=secureSocket,cb(secureSocket)}))}function toOptions(host,port,localAddress){return"string"==typeof host?{host,port,localAddress}:host}function mergeOptions(target){for(var i=1,len=arguments.length;i<len;++i){var overrides=arguments[i];if("object"==typeof overrides)for(var keys=Object.keys(overrides),j=0,keyLen=keys.length;j<keyLen;++j){var k=keys[j];void 0!==overrides[k]&&(target[k]=overrides[k])}}return target}exports.httpOverHttp=function httpOverHttp(options){var agent=new TunnelingAgent(options);return agent.request=http.request,agent},exports.httpsOverHttp=function httpsOverHttp(options){var agent=new TunnelingAgent(options);return agent.request=http.request,agent.createSocket=createSecureSocket,agent.defaultPort=443,agent},exports.httpOverHttps=function httpOverHttps(options){var agent=new TunnelingAgent(options);return agent.request=https.request,agent},exports.httpsOverHttps=function httpsOverHttps(options){var agent=new TunnelingAgent(options);return agent.request=https.request,agent.createSocket=createSecureSocket,agent.defaultPort=443,agent},util.inherits(TunnelingAgent,events.EventEmitter),TunnelingAgent.prototype.addRequest=function addRequest(req,host,port,localAddress){var self=this,options=mergeOptions({request:req},self.options,toOptions(host,port,localAddress));self.sockets.length>=this.maxSockets?self.requests.push(options):self.createSocket(options,(function(socket){function onFree(){self.emit("free",socket,options)}function onCloseOrRemove(err){self.removeSocket(socket),socket.removeListener("free",onFree),socket.removeListener("close",onCloseOrRemove),socket.removeListener("agentRemove",onCloseOrRemove)}socket.on("free",onFree),socket.on("close",onCloseOrRemove),socket.on("agentRemove",onCloseOrRemove),req.onSocket(socket)}))},TunnelingAgent.prototype.createSocket=function createSocket(options,cb){var self=this,placeholder={};self.sockets.push(placeholder);var connectOptions=mergeOptions({},self.proxyOptions,{method:"CONNECT",path:options.host+":"+options.port,agent:!1,headers:{host:options.host+":"+options.port}});options.localAddress&&(connectOptions.localAddress=options.localAddress),connectOptions.proxyAuth&&(connectOptions.headers=connectOptions.headers||{},connectOptions.headers["Proxy-Authorization"]="Basic "+new Buffer(connectOptions.proxyAuth).toString("base64")),debug("making CONNECT request");var connectReq=self.request(connectOptions);function onConnect(res,socket,head){var error;return connectReq.removeAllListeners(),socket.removeAllListeners(),200!==res.statusCode?(debug("tunneling socket could not be established, statusCode=%d",res.statusCode),socket.destroy(),(error=new Error("tunneling socket could not be established, statusCode="+res.statusCode)).code="ECONNRESET",options.request.emit("error",error),void self.removeSocket(placeholder)):head.length>0?(debug("got illegal response body from proxy"),socket.destroy(),(error=new Error("got illegal response body from proxy")).code="ECONNRESET",options.request.emit("error",error),void self.removeSocket(placeholder)):(debug("tunneling connection has established"),self.sockets[self.sockets.indexOf(placeholder)]=socket,cb(socket))}connectReq.useChunkedEncodingByDefault=!1,connectReq.once("response",(function onResponse(res){res.upgrade=!0})),connectReq.once("upgrade",(function onUpgrade(res,socket,head){process.nextTick((function(){onConnect(res,socket,head)}))})),connectReq.once("connect",onConnect),connectReq.once("error",(function onError(cause){connectReq.removeAllListeners(),debug("tunneling socket could not be established, cause=%s\n",cause.message,cause.stack);var error=new Error("tunneling socket could not be established, cause="+cause.message);error.code="ECONNRESET",options.request.emit("error",error),self.removeSocket(placeholder)})),connectReq.end()},TunnelingAgent.prototype.removeSocket=function removeSocket(socket){var pos=this.sockets.indexOf(socket);if(-1!==pos){this.sockets.splice(pos,1);var pending=this.requests.shift();pending&&this.createSocket(pending,(function(socket){pending.request.onSocket(socket)}))}},debug=process.env.NODE_DEBUG&&/\btunnel\b/.test(process.env.NODE_DEBUG)?function(){var args=Array.prototype.slice.call(arguments);"string"==typeof args[0]?args[0]="TUNNEL: "+args[0]:args.unshift("TUNNEL:"),console.error.apply(console,args)}:function(){},exports.debug=debug},479:module=>{module.exports=function wrappy(fn,cb){if(fn&&cb)return wrappy(fn)(cb);if("function"!=typeof fn)throw new TypeError("need wrapper function");return Object.keys(fn).forEach((function(k){wrapper[k]=fn[k]})),wrapper;function wrapper(){for(var args=new Array(arguments.length),i=0;i<args.length;i++)args[i]=arguments[i];var ret=fn.apply(this,args),cb=args[args.length-1];return"function"==typeof ret&&ret!==cb&&Object.keys(cb).forEach((function(k){ret[k]=cb[k]})),ret}}},357:module=>{"use strict";module.exports=require("assert")},129:module=>{"use strict";module.exports=require("child_process")},614:module=>{"use strict";module.exports=require("events")},747:module=>{"use strict";module.exports=require("fs")},605:module=>{"use strict";module.exports=require("http")},211:module=>{"use strict";module.exports=require("https")},631:module=>{"use strict";module.exports=require("net")},87:module=>{"use strict";module.exports=require("os")},622:module=>{"use strict";module.exports=require("path")},16:module=>{"use strict";module.exports=require("tls")},669:module=>{"use strict";module.exports=require("util")}},__webpack_module_cache__={};function __webpack_require__(moduleId){var cachedModule=__webpack_module_cache__[moduleId];if(void 0!==cachedModule)return cachedModule.exports;var module=__webpack_module_cache__[moduleId]={exports:{}};return __webpack_modules__[moduleId].call(module.exports,module,module.exports,__webpack_require__),module.exports}__webpack_require__.n=module=>{var getter=module&&module.__esModule?()=>module.default:()=>module;return __webpack_require__.d(getter,{a:getter}),getter},__webpack_require__.d=(exports,definition)=>{for(var key in definition)__webpack_require__.o(definition,key)&&!__webpack_require__.o(exports,key)&&Object.defineProperty(exports,key,{enumerable:!0,get:definition[key]})},__webpack_require__.o=(obj,prop)=>Object.prototype.hasOwnProperty.call(obj,prop),__webpack_require__.r=exports=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(exports,"__esModule",{value:!0})};var __webpack_exports__={};(()=>{"use strict";var exports=__webpack_exports__;Object.defineProperty(exports,"__esModule",{value:!0}),exports.run=void 0;const core=__webpack_require__(225),install_runner_1=__webpack_require__(334),util_1=__webpack_require__(285),process_inputs_1=__webpack_require__(34),get_runners_1=__webpack_require__(47),inputs_outputs_1=__webpack_require__(169);async function run(){const runnerConfig=process_inputs_1.default();core.debug("INPUTS:"),core.debug(JSON.stringify(runnerConfig,void 0,2));const taggedImage=`${runnerConfig.runnerImage}:${runnerConfig.runnerTag}`;core.info(`🔎 Fetching self-hosted runners for ${runnerConfig.runnerLocation}`);const matchingOnlineRunners=await get_runners_1.getMatchingOnlineRunners(runnerConfig.githubPat,runnerConfig.runnerLocation,runnerConfig.runnerLabels.concat(taggedImage));if(matchingOnlineRunners.length>0){const runnerNames=matchingOnlineRunners.map((runner=>runner.name));return 1===matchingOnlineRunners.length?core.info(`✅ Runner ${runnerNames[0]} matches the given labels.`):core.info(`✅ Runners ${util_1.joinList(runnerNames)} match the given labels.`),core.setOutput(inputs_outputs_1.Outputs.INSTALLED,!1),void core.setOutput(inputs_outputs_1.Outputs.RUNNERS,JSON.stringify(runnerNames))}core.info("❌ No online runner with all the required labels was found."),core.info("Installing a runner now.");const installedRunnerPodnames=await install_runner_1.default(runnerConfig);core.debug(`installedRunnerPodnames are ${installedRunnerPodnames}`);const newRunnerNames=installedRunnerPodnames,newRunners=await get_runners_1.waitForRunnersToBeOnline(runnerConfig.githubPat,runnerConfig.runnerLocation,newRunnerNames),plural=1!==newRunners.length;core.info(`✅ Success: new self-hosted runner${plural?"s":""} ${util_1.joinList(newRunners)} ${plural?"are":"is"} up and running.`),core.setOutput(inputs_outputs_1.Outputs.HELM_RELEASE_NAME,runnerConfig.helmReleaseName),core.setOutput(inputs_outputs_1.Outputs.INSTALLED,!0),core.setOutput(inputs_outputs_1.Outputs.RUNNERS,JSON.stringify(newRunners))}exports.run=run,run().catch((err=>core.setFailed(err.message)))})(),module.exports=__webpack_exports__})();
//# sourceMappingURL=index.js.map